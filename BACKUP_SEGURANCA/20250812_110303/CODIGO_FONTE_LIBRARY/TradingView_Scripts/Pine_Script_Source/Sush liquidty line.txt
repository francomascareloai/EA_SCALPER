//@version=6
indicator('sush', overlay=true, max_boxes_count=50, max_lines_count=50, max_bars_back=700)

useStratFilter = input.bool(true, title='Filter Buy/Sell signal', group='BUY AND SELL Settings')

// === Liquidity Swing Inputs ===
swingSizeR = 30
swingSizeL = 30
extendtilfilled = true
hidefilled = false

// === Liquidity Line Appearance ===
showhighs = true
showlows = true
sellcol = #ff0015
buycol = color.rgb(67, 215, 74)
// === Liquidity Time Range Filter === 
lookback = false 
daysBack = 150 
MSPD = 24 * 60 * 60 * 1000 
lastBarDate = timestamp(year(timenow), month(timenow), dayofmonth(timenow), hour(timenow), minute(timenow), second(timenow)) 
thisBarDate = timestamp(year, month, dayofmonth, hour, minute, second) 
daysLeft = math.abs(math.floor((lastBarDate - thisBarDate) / MSPD)) 
inRange = lookback ? daysLeft < daysBack : true 
 
// === Liquidity Swing Detection === 
int prevHighIndex = na 
int prevLowIndex = na 
bool h = false 
bool l = false 
pivHi = ta.pivothigh(high, swingSizeL, swingSizeR) 
pivLo = ta.pivotlow(low, swingSizeL, swingSizeR) 
 
if not na(pivHi) 
    h := true 
    prevHighIndex := bar_index - swingSizeR 
if not na(pivLo) 
    l := true 
    prevLowIndex := bar_index - swingSizeR 
 
// === Plot Liquidity Levels === 
var levelLines = array.new_line() 
 
if h and inRange and showhighs  
    hLine = line.new(prevHighIndex, pivHi, bar_index, pivHi, color=sellcol, style=line.style_solid, width=2) 
    array.push(levelLines, hLine) 
 
if l and inRange and showlows  
    lLine = line.new(prevLowIndex, pivLo, bar_index, pivLo, color=buycol, style=line.style_solid, width=2) 
    array.push(levelLines, lLine) 
 
// === Extend/Remove Liquidity Levels === 
size = array.size(levelLines) 
if size > 0 
    for i = 0 to size - 1 by 1 
        j = size - 1 - i 
        line = array.get(levelLines, j) 
        level = line.get_y2(line) 
        filled = high >= level and low <= level 
        if filled and extendtilfilled and not hidefilled 
            array.remove(levelLines, j) 
            continue 
        line.set_x2(line, bar_index + 1) 
        if filled and hidefilled 
            array.remove(levelLines, j) 
            line.delete(line) 
        if not filled and not extendtilfilled 
            array.remove(levelLines, j) 
            continue 
 
// === Cleanup Overflow === 
if array.size(levelLines) >= 50 
    int i = 0 
    while array.size(levelLines) >= 50 
        line = array.get(levelLines, i) 
        line.delete(line) 
        array.remove(levelLines, i)