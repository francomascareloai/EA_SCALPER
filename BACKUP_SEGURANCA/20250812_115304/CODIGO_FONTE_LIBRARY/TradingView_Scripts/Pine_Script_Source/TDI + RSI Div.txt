
//@version=5
indicator('<TDI - Traders Dynamic Index + RSI Divergences + Buy/Sell Signals>', shorttitle='<TDI + RSI Div>')
rsiPeriod = input.int(14, minval=1, title='RSI Period')
bandLength = input.int(34, minval=1, title='Band Length')
lengthrsipl = input.int(7, minval=0, title='Fast MA on RSI')
lengthtradesl = input.int(2, minval=1, title='Slow MA on RSI')

src1 = close  // Source of Calculations (Close of Bar)
r = ta.rsi(src1, rsiPeriod)  // RSI of Close
ma = ta.sma(r, bandLength)  // Moving Average of RSI [current]
offs = 1.6185 * ta.stdev(r, bandLength)  // Offset
up = ma + offs  // Upper Bands
dn = ma - offs  // Lower Bands
mid = (up + dn) / 2  // Average of Upper and Lower Bands
mbb = ta.sma(r, lengthrsipl)  // Moving Average of RSI 2 bars back
mab = ta.sma(r, lengthtradesl)  // Moving Average of RSI 7 bars back

hline(30, color=color.red, linewidth=1, linestyle=hline.style_dotted)
hline(50, color=color.orange, linewidth=1, linestyle=hline.style_dotted)
hline(70, color=color.green, linewidth=1, linestyle=hline.style_dotted)

// Plot the TDI
upl = plot(up, color=color.new(#12bcc9, 60), title='VB Channel High', linewidth=2)
dnl = plot(dn, color=color.new(#12bcc9, 60), title='VB Channel Low', linewidth=2)
midl = plot(mid, color=color.new(color.orange, 40), linewidth=2, title='MBL')
mabl = plot(mab, color=color.new(color.lime, 30), linewidth=2, title='RSI PL')
mbbl = plot(mbb, color=color.new(color.red, 60), linewidth=2, title='TSL Signal')

// Create RSI TSL cloud to indicate trend direction.
fill(mabl, mbbl, color=mab > mbb ? color.new(color.green, 80) : color.new(color.red, 80))

// Long/short labels
long1 = ta.crossover(mab, mbb) and mbb > mid and mbb > 50
short1 = ta.crossunder(mab, mbb) and mbb < mid and mbb < 50

plotshape(long1, style=shape.labelup, location=location.bottom, color=color.new(color.lime, 0), size=size.tiny, editable=true)
plotshape(short1, style=shape.labeldown, location=location.top, color=color.new(color.red, 0), size=size.tiny, editable=true)

alertcondition(long1, title='Long', message='Crossover')
alertcondition(short1, title='Short', message='Crossunder')

best_setup = ta.crossover(mab, mid)
alertcondition(best_setup, title='RSI Crosses Yellow', message='rsi crosses mid')

scalp = mab > mid
bgcolor(scalp ? color.new(color.lime, 95) : na)

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////

// Divergences //

len = input.int(title='RSI Period', minval=1, defval=14)
src = input(title='RSI Source', defval=close)
lbR = input(title='Pivot Lookback Right', defval=5)
lbL = input(title='Pivot Lookback Left', defval=5)
rangeUpper = input(title='Max of Lookback Range', defval=60)
rangeLower = input(title='Min of Lookback Range', defval=5)
plotBull = input(title='Plot Bullish', defval=true)
plotHiddenBull = input(title='Plot Hidden Bullish', defval=false)
plotBear = input(title='Plot Bearish', defval=true)
plotHiddenBear = input(title='Plot Hidden Bearish', defval=false)
bearColor = color.red
bullColor = color.green
hiddenBullColor = color.new(color.green, 80)
hiddenBearColor = color.new(color.red, 80)
textColor = color.white
noneColor = color.new(color.white, 100)
osc = ta.rsi(src, len)

// // plot(osc, title="RSI", linewidth=2, color=#8D1699)
// hline(50, title="Middle Line", linewidth=2, linestyle=hline.style_dotted)
// obLevel = hline(70, title="Overbought", linewidth=2, linestyle=hline.style_dotted)
// osLevel = hline(30, title="Oversold", linewidth=2, linestyle=hline.style_dotted)

plFound = na(ta.pivotlow(osc, lbL, lbR)) ? false : true
phFound = na(ta.pivothigh(osc, lbL, lbR)) ? false : true
_inRange(cond) =>
    bars = ta.barssince(cond == true)
    rangeLower <= bars and bars <= rangeUpper

//------------------------------------------------------------------------------
// Regular Bullish
// Osc: Higher Low

oscHL = osc[lbR] > ta.valuewhen(plFound, osc[lbR], 1) and _inRange(plFound[1])

// Price: Lower Low

priceLL = low[lbR] < ta.valuewhen(plFound, low[lbR], 1)
bullCond = plotBull and priceLL and oscHL and plFound

plot(plFound ? osc[lbR] : na, offset=-lbR, title='Regular Bullish', linewidth=2, color=bullCond ? bullColor : noneColor)
plotshape(bullCond ? osc[lbR] : na, offset=-lbR, title='Regular Bullish Label', text=' Bull ', style=shape.labelup, location=location.absolute, color=color.new(bullColor, 0), textcolor=color.new(textColor, 0))

//------------------------------------------------------------------------------
// Hidden Bullish
// Osc: Lower Low

oscLL = osc[lbR] < ta.valuewhen(plFound, osc[lbR], 1) and _inRange(plFound[1])

// Price: Higher Low

priceHL = low[lbR] > ta.valuewhen(plFound, low[lbR], 1)
hiddenBullCond = plotHiddenBull and priceHL and oscLL and plFound

plot(plFound ? osc[lbR] : na, offset=-lbR, title='Hidden Bullish', linewidth=2, color=hiddenBullCond ? hiddenBullColor : noneColor)
plotshape(hiddenBullCond ? osc[lbR] : na, offset=-lbR, title='Hidden Bullish Label', text=' H Bull ', style=shape.labelup, location=location.absolute, color=color.new(bullColor, 0), textcolor=color.new(textColor, 0))

//------------------------------------------------------------------------------
// Regular Bearish
// Osc: Lower High

oscLH = osc[lbR] < ta.valuewhen(phFound, osc[lbR], 1) and _inRange(phFound[1])

// Price: Higher High

priceHH = high[lbR] > ta.valuewhen(phFound, high[lbR], 1)

bearCond = plotBear and priceHH and oscLH and phFound

plot(phFound ? osc[lbR] : na, offset=-lbR, title='Regular Bearish', linewidth=2, color=bearCond ? bearColor : noneColor)
plotshape(bearCond ? osc[lbR] : na, offset=-lbR, title='Regular Bearish Label', text=' Bear ', style=shape.labeldown, location=location.absolute, color=color.new(bearColor, 0), textcolor=color.new(textColor, 0))

//------------------------------------------------------------------------------
// Hidden Bearish
// Osc: Higher High

oscHH = osc[lbR] > ta.valuewhen(phFound, osc[lbR], 1) and _inRange(phFound[1])

// Price: Lower High

priceLH = high[lbR] < ta.valuewhen(phFound, high[lbR], 1)

hiddenBearCond = plotHiddenBear and priceLH and oscHH and phFound

plot(phFound ? osc[lbR] : na, offset=-lbR, title='Hidden Bearish', linewidth=2, color=hiddenBearCond ? hiddenBearColor : noneColor)
plotshape(hiddenBearCond ? osc[lbR] : na, offset=-lbR, title='Hidden Bearish Label', text=' H Bear ', style=shape.labeldown, location=location.absolute, color=color.new(bearColor, 0), textcolor=color.new(textColor, 0))