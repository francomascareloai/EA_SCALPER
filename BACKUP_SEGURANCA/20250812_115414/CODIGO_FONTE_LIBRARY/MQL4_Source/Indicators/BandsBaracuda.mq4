/*
   Generated by EX4-TO-MQ4 decompiler V4.0.224.1 []
   Website: http://purebeam.biz
   E-mail : purebeam@gmail.com
*/
#property copyright "Copyright © 2009, Expforex."
#property link      "http://www.expforex.at.ua"

#property indicator_chart_window
#property indicator_buffers 5
#property indicator_color1 LightSeaGreen
#property indicator_color2 LightSeaGreen
#property indicator_color3 LightSeaGreen
#property indicator_color4 Blue
#property indicator_color5 Red

extern int BandsPeriod = 20;
extern int BandsShift = 0;
extern double BandsDeviations = 2.0;
double g_ibuf_92[];
double g_ibuf_96[];
double g_ibuf_100[];
double g_ibuf_104[];
double g_ibuf_108[];
double gda_unused_112[];
double gda_unused_116[];
bool gi_120;
bool gi_124;
double gd_128;
double g_close_136;
int gi_144;

int init() {
   SetIndexStyle(0, DRAW_LINE);
   SetIndexBuffer(0, g_ibuf_92);
   SetIndexStyle(1, DRAW_LINE);
   SetIndexBuffer(1, g_ibuf_96);
   SetIndexStyle(2, DRAW_LINE);
   SetIndexBuffer(2, g_ibuf_100);
   SetIndexStyle(3, DRAW_ARROW);
   SetIndexBuffer(3, g_ibuf_104);
   SetIndexArrow(3, 217);
   SetIndexStyle(4, DRAW_ARROW);
   SetIndexBuffer(4, g_ibuf_108);
   SetIndexArrow(4, 218);
   SetIndexDrawBegin(0, BandsPeriod + BandsShift);
   SetIndexDrawBegin(1, BandsPeriod + BandsShift);
   SetIndexDrawBegin(2, BandsPeriod + BandsShift);
   return (0);
}

int start() {
   int li_4;
   double ld_12;
   double ld_20;
   double ld_28;
   double ld_36;
   string ls_48;
   int l_ind_counted_8 = IndicatorCounted();
   if (Bars <= BandsPeriod) return (0);
   if (l_ind_counted_8 < 1) {
      for (int li_0 = 1; li_0 <= BandsPeriod; li_0++) {
         g_ibuf_92[Bars - li_0] = EMPTY_VALUE;
         g_ibuf_96[Bars - li_0] = EMPTY_VALUE;
         g_ibuf_100[Bars - li_0] = EMPTY_VALUE;
      }
   }
   int li_44 = Bars - l_ind_counted_8;
   if (l_ind_counted_8 > 0) li_44++;
   for (li_0 = 0; li_0 < li_44; li_0++) g_ibuf_92[li_0] = iMA(NULL, 0, BandsPeriod, BandsShift, MODE_SMA, PRICE_CLOSE, li_0);
   li_0 = Bars - BandsPeriod + 1;
   if (l_ind_counted_8 > BandsPeriod - 1) li_0 = Bars - l_ind_counted_8 - 1;
   while (li_0 >= 0) {
      ld_20 = 0.0;
      li_4 = li_0 + BandsPeriod - 1;
      ld_28 = g_ibuf_92[li_0];
      while (li_4 >= li_0) {
         ld_36 = Close[li_4] - ld_28;
         ld_20 += ld_36 * ld_36;
         li_4--;
      }
      ld_12 = BandsDeviations * MathSqrt(ld_20 / BandsPeriod);
      g_ibuf_96[li_0] = ld_28 + ld_12;
      g_ibuf_100[li_0] = ld_28 - ld_12;
      if (High[li_0] > g_ibuf_96[li_0] && Open[li_0] < g_ibuf_96[li_0] && iCustom(Symbol(), 0, "ZigZag", 12, 5, 3, 0, li_0) > 0.0) {
         g_ibuf_108[li_0] = High[li_0] + MarketInfo(Symbol(), MODE_SPREAD) * Point;
         gi_124 = FALSE;
         gi_120 = TRUE;
         g_close_136 = Close[li_0];
         gi_144++;
      } else g_ibuf_108[li_0] = 0;
      if (Low[li_0] < g_ibuf_100[li_0] && Open[li_0] > g_ibuf_100[li_0] && iCustom(Symbol(), 0, "ZigZag", 12, 5, 3, 0, li_0) > 0.0) {
         g_ibuf_104[li_0] = Low[li_0] - MarketInfo(Symbol(), MODE_SPREAD) * Point;
         gi_120 = FALSE;
         gi_124 = TRUE;
         g_close_136 = Close[li_0];
         gi_144++;
      } else g_ibuf_104[li_0] = 0;
      if (gi_120 == TRUE) {
         gd_128 += Close[li_0] - g_close_136;
         g_close_136 = Close[li_0];
         ls_48 = " Покупка";
      }
      if (gi_124 == TRUE) {
         gd_128 += g_close_136 - Close[li_0];
         g_close_136 = Close[li_0];
         ls_48 = " Продажа";
      }
      Comment("Профит=" + (gd_128 / Point) + " Ордера=" + gi_144 + ls_48);
      li_0--;
   }
   return (0);
}
