//@version=5
indicator("Bearish Breaker", overlay=true)

// Input for the length of average body size calculation
length = input.int(3, title="Length for Average Body Size Calculation")

// Input options for color and transparency
color618 = input.color(color.red, title="61.8% Line Color")
color50 = input.color(color.orange, title="50% Line Color")
colorFVG = input.color(color.yellow, title="FVG Line Color")
shadeColor = input.color(color.red, title="Shaded Area Color")
shadeTransparency = input.int(80, title="Shaded Area Transparency", minval=0, maxval=100)
highlightedCandleColor = input.color(color.red, title="Highlighted Candle Color")  // Color for highlighted candle

// Inputs to show/hide labels
showFVGLabel = input.bool(true, title="Show FVG Label")
show618Label = input.bool(true, title="Show 61.8% Label")
show50Label = input.bool(true, title="Show 50% Label")
showStopLossLabel = input.bool(true, title="Show Stop Loss Label")

// Input for dollar value per tick
tickValue = input.float(1.0, title="Dollar Value per Tick")  // Adjust to match your market's per-tick value

// Input for stop loss ticks above the high
stopLossTicks = input.int(4, title="Stop Loss Ticks Above High")

// Calculate the candle body size
bodySize = math.abs(close - open)

// Calculate the average body size over the specified length
avgBodySize = ta.sma(bodySize, length)

// Input for threshold multiplier
thresholdMultiplier = input.float(1.5, title="Threshold Multiplier")

// Condition for a large bearish candle
isLargeBearishCandle = (close < open) and (bodySize > (thresholdMultiplier * avgBodySize))

// Additional condition: close must be lower than the low of the previous two candles
isCloseLowerThanPreviousLows = (close < ta.lowest(low[1], 2))

// Input for adjustable percent close
percentClose = input.float(75.0, title="Close Percent in Range", minval=0.0, maxval=100.0)

// Condition to check if close is in the bottom specified percent of the candle's range
bottomPercentLevel = high - (percentClose / 100.0) * (high - low)
isCloseInBottomPercent = close <= bottomPercentLevel

// Combine all conditions
highlightCondition = isLargeBearishCandle and isCloseLowerThanPreviousLows and isCloseInBottomPercent

// Plot a down arrow on large bearish candles that close in the bottom specified percent
plotshape(series=highlightCondition, location=location.belowbar, color=#f4e8e8, style=shape.cross, title="Highlight Bearish Candle")

// Color the highlighted candle using the chosen color input
barcolor(highlightCondition ? highlightedCandleColor : na)

// Draw a horizontal line at the low of the previous candle for each highlighted bearish candle and label it as "FVG"
if (highlightCondition)
    line.new(x1=bar_index[1], y1=low[1], x2=bar_index[1] + 6, y2=low[1], xloc=xloc.bar_index, color=colorFVG, width=2)
    if (showFVGLabel)
        label.new(x=bar_index[1] -1, y=low[1], text="FVG", color=colorFVG, textcolor=#0c0c0c, style=label.style_text_outline)

// Calculate the 61.8% and 50% levels from low to high of the highlighted candle
fib618Level = low + 0.618 * (high - low)
fib50Level = low + 0.5 * (high - low)

// Plot lines at the 61.8% and 50% levels from low to high, extend them for 5 bars, and add text labels if enabled
if (highlightCondition) 
    line.new(x1=bar_index, y1=fib618Level, x2=bar_index + 6, y2=fib618Level, xloc=xloc.bar_index, color=color618, width=1)
    line.new(x1=bar_index, y1=fib50Level, x2=bar_index + 4, y2=fib50Level, xloc=xloc.bar_index, color=color50, width=1)
    if (show618Label)
        label.new(x=bar_index + 6, y=fib618Level, text="61.8%", color=color618, textcolor=#090a0a, style=label.style_text_outline)
    if (show50Label)
        label.new(x=bar_index + 4, y=fib50Level, text="50%", color=color50, textcolor=#060707, style=label.style_text_outline)

// Shade the area between the 50% and 61.8% levels
if (highlightCondition)
    var fillColor = color.new(shadeColor, shadeTransparency)
    box.new(left=bar_index, top=fib50Level, right=bar_index + 4, bottom=low[1], bgcolor=fillColor, border_width=0)

// Calculate Stop Loss Level (customizable number of ticks above the high of the highlighted candle)
tickSize = syminfo.mintick  // Gets the tick size of the current symbol
stopLossLevel = high + (stopLossTicks * tickSize)

// Calculate the dollar amount of potential loss from FVG to Stop Loss
dollarLoss = (stopLossLevel - low[1]) / tickSize * tickValue

// Draw the Stop Loss line as dotted, with label showing dollar loss if enabled
if (highlightCondition)
    line.new(x1=bar_index, y1=stopLossLevel, x2=bar_index + 5, y2=stopLossLevel, 
             xloc=xloc.bar_index, color=#830b0b, width=2, style=line.style_dashed)
    if (showStopLossLabel)
        label.new(x=bar_index + 5, y=stopLossLevel, text="Stop Loss: $" + str.tostring(dollarLoss, "#.##"), 
                  color=#0d0d0e, textcolor=color.white, style=label.style_label_left)

// Alert when the highlighted candle is forming
alertcondition(highlightCondition, title="Large Bearish Candle Alert", message="A large bearish candle has formed and meets all criteria.")
// ==========================================================================================

// === Dashboard with Telegram Link ===
var table myTable = table.new(position.top_center, 1, 1, border_width=1, frame_color=color.black, bgcolor=color.white)

// Add Telegram Message to Dashboard
table.cell(myTable, 0, 0, "Join Telegram @free_fx_pro", bgcolor=color.blue, text_color=color.white, text_size=size.normal)
