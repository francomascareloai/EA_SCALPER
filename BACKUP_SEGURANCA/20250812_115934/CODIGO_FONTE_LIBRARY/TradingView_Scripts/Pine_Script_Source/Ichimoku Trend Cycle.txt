//@version=6
indicator("Ichimoku Trend Cycle", shorttitle="ITC", overlay=true, max_lines_count=500, max_bars_back=500)

//------------------------------------------------------------------------------
// Settings
//-----------------------------------------------------------------------------{

// Alpha Trend (formerly Brahma) Settings
convPeriod5 = input.int(9, title="Conversion Line Period", group="Alpha Trend Settings")
basePeriod5 = input.int(26, title="Baseline Period", group="Alpha Trend Settings")
atrPeriod5 = input.int(6, title="ATR Period", minval=1, group="Alpha Trend Settings")
atrMultiplier5 = input.float(6.0, title="ATR Multiplier", minval=0.1, group="Alpha Trend Settings")
smoothPeriod5 = input.int(1, title="Smoothing Period", minval=1, group="Alpha Trend Settings")

// Alpha Trend Colors
upColor5 = input.color(color.blue, "Uptrend Color", group="Alpha Trend Colors")
downColor5 = input.color(color.blue, "Downtrend Color", group="Alpha Trend Colors")

// Beta Trend (formerly Vishnu) Settings
convPeriod6 = input.int(9, title="Conversion Line Period", group="Beta Trend Settings")
basePeriod6 = input.int(26, title="Baseline Period", group="Beta Trend Settings")
atrPeriod6 = input.int(6, title="ATR Period", minval=1, group="Beta Trend Settings")
atrMultiplier6 = input.float(5.0, title="ATR Multiplier", minval=0.1, group="Beta Trend Settings")
smoothPeriod6 = input.int(1, title="Smoothing Period", minval=1, group="Beta Trend Settings")

// Beta Trend Colors
upColor6 = input.color(color.red, "Uptrend Color", group="Beta Trend Colors")
downColor6 = input.color(color.red, "Downtrend Color", group="Beta Trend Colors")

// Custom Candle Colors
bullishColor = input.color(color.green, "Bullish Candle Color", group="Candle Color Settings")
bearishColor = input.color(color.red, "Bearish Candle Color", group="Candle Color Settings")

// Smoothing MA Settings
GRP = "Smoothing MA Settings"
TT_BB = "Only applies when 'SMA + Bollinger Bands' is selected. Determines the distance between the SMA and the bands."
maTypeInput = input.string("None", "Smoothing Type", options=["None", "SMA", "SMA + Bollinger Bands", "EMA", "SMMA (RMA)", "WMA", "VWMA"], group=GRP)
maLengthInput = input.int(14, "Smoothing Length", group=GRP)
bbMultInput = input.float(2.0, "BB StdDev", minval=0.001, maxval=50, step=0.5, tooltip=TT_BB, group=GRP)

// Alert Settings
alertLookback = input.int(3, "Candles to Confirm Crossover", minval=1, maxval=10, group="Alert Settings")
showAlerts = input.bool(true, "Show Alert Messages", group="Alert Settings")

//----------------------------------------------------------------------------- 
// Alpha Trend Calculation (Ichimoku ATR Supertrend)
//-----------------------------------------------------------------------------{
convHigh5 = ta.highest(high, convPeriod5)
convLow5 = ta.lowest(low, convPeriod5)
conversionLine5 = (convHigh5 + convLow5) / 2

baseHigh5 = ta.highest(high, basePeriod5)
baseLow5 = ta.lowest(low, basePeriod5)
baseline5 = (baseHigh5 + baseLow5) / 2

atr5 = ta.atr(atrPeriod5)

midPrice5 = (high + low) / 2
upperBand5 = midPrice5 + atrMultiplier5 * atr5
lowerBand5 = midPrice5 - atrMultiplier5 * atr5

var float trend5 = 1
var float trailingStop5 = 0.0
trailingStop5 := na(trailingStop5[1]) ? lowerBand5 : trailingStop5[1]

if na(trend5[1])
    trend5 := close > conversionLine5 and close > baseline5 ? 1 : -1

if trend5[1] == 1
    trailingStop5 := math.max(lowerBand5, nz(trailingStop5[1]))
    if close < trailingStop5[1]
        trend5 := -1
        trailingStop5 := upperBand5
else
    trailingStop5 := math.min(upperBand5, nz(trailingStop5[1]))
    if close > trailingStop5[1]
        trend5 := 1
        trailingStop5 := lowerBand5

smoothedTrendLine5 = ta.sma(trailingStop5, smoothPeriod5)

//----------------------------------------------------------------------------- 
// Beta Trend Calculation (Additional Supertrend)
//-----------------------------------------------------------------------------{
convHigh6 = ta.highest(high, convPeriod6)
convLow6 = ta.lowest(low, convPeriod6)
conversionLine6 = (convHigh6 + convLow6) / 2

baseHigh6 = ta.highest(high, basePeriod6)
baseLow6 = ta.lowest(low, basePeriod6)
baseline6 = (baseHigh6 + baseLow6) / 2

atr6 = ta.atr(atrPeriod6)

midPrice6 = (high + low) / 2
upperBand6 = midPrice6 + atrMultiplier6 * atr6
lowerBand6 = midPrice6 - atrMultiplier6 * atr6

var float trend6 = 1
var float trailingStop6 = 0.0
trailingStop6 := na(trailingStop6[1]) ? lowerBand6 : trailingStop6[1]

if na(trend6[1])
    trend6 := close > conversionLine6 and close > baseline6 ? 1 : -1

if trend6[1] == 1
    trailingStop6 := math.max(lowerBand6, nz(trailingStop6[1]))
    if close < trailingStop6[1]
        trend6 := -1
        trailingStop6 := upperBand6
else
    trailingStop6 := math.min(upperBand6, nz(trailingStop6[1]))
    if close > trailingStop6[1]
        trend6 := 1
        trailingStop6 := lowerBand6

smoothedTrendLine6 = ta.sma(trailingStop6, smoothPeriod6)

//-----------------------------------------------------------------------------
// Smoothing MA Calculation
//-----------------------------------------------------------------------------{

ma(source, length, MAtype) =>
    switch MAtype
        "SMA"                   => ta.sma(source, length)
        "SMA + Bollinger Bands" => ta.sma(source, length)
        "EMA"                   => ta.ema(source, length)
        "SMMA (RMA)"            => ta.rma(source, length)
        "WMA"                   => ta.wma(source, length)
        "VWMA"                  => ta.vwma(source, length)

var enableMA = maTypeInput != "None"
var isBB = maTypeInput == "SMA + Bollinger Bands"

smoothingMA = enableMA ? ma(close, maLengthInput, maTypeInput) : na
smoothingStDev = isBB ? ta.stdev(close, maLengthInput) * bbMultInput : na

//-----------------------------------------------------------------------------}
// Plot Custom Candlesticks
//-----------------------------------------------------------------------------{
// Simple candle coloring based on trend alignment
simpleCandleColor = trend5 == 1 and trend6 == 1 ? bullishColor : trend5 == -1 and trend6 == -1 ? bearishColor : color.gray

barcolor(simpleCandleColor)
plotcandle(open, high, low, close, title="Custom Candles", color=simpleCandleColor, wickcolor=simpleCandleColor, bordercolor=simpleCandleColor)

//-----------------------------------------------------------------------------}
// Plots
//-----------------------------------------------------------------------------{
// Trend Line Plots with new names
plot(smoothedTrendLine5, title="Alpha Trend", color=trend5 == 1 ? upColor5 : downColor5, style=plot.style_line, linewidth=2)
plot(smoothedTrendLine6, title="Beta Trend", color=trend6 == 1 ? upColor6 : downColor6, style=plot.style_line, linewidth=2)

// Smoothing MA and Bollinger Bands Plots
plot(smoothingMA, "Smoothing MA", color=color.yellow, display=enableMA ? display.all : display.none)
bbUpperBand = plot(smoothingMA + smoothingStDev, title="Upper Bollinger Band", color=color.green, display=isBB ? display.all : display.none)
bbLowerBand = plot(smoothingMA - smoothingStDev, title="Lower Bollinger Band", color=color.green, display=isBB ? display.all : display.none)
fill(bbUpperBand, bbLowerBand, color=isBB ? color.new(color.green, 90) : na, title="Bollinger Bands Background Fill", display=isBB ? display.all : display.none)

// Trend alignment signals
trendAlignment = trend5 == 1 and trend6 == 1
trendBearish = trend5 == -1 and trend6 == -1

// Variables to track if signal has been shown in current trend
var bool buySignalShown = false
var bool sellSignalShown = false

// Reset signal flags when trend changes
if trendAlignment and not trendAlignment[1]
    sellSignalShown := false
if trendBearish and not trendBearish[1]
    buySignalShown := false

// Show signal only once per trend
showBuySignal = trendAlignment and not trendAlignment[1] and not buySignalShown
showSellSignal = trendBearish and not trendBearish[1] and not sellSignalShown

// Update flags after showing signal
if showBuySignal
    buySignalShown := true
if showSellSignal
    sellSignalShown := true

// Plot signals - only one per trend
plotshape(showBuySignal and showAlerts, title="Buy Signal", text="BUY", location=location.belowbar, color=color.new(color.lime, 0), textcolor=color.black, style=shape.labelup, size=size.normal)
plotshape(showSellSignal and showAlerts, title="Sell Signal", text="SELL", location=location.abovebar, color=color.new(color.red, 0), textcolor=color.white, style=shape.labeldown, size=size.normal)

// Alert conditions for trend alignment - only one per trend
alertcondition(showBuySignal, title="Buy Signal Alert", message="Alpha and Beta trends aligned - BUY Signal!")
alertcondition(showSellSignal, title="Sell Signal Alert", message="Alpha and Beta trends aligned - SELL Signal!")
// ==========================================================================================

// === Dashboard with Telegram Link ===
var table myTable = table.new(position.top_center, 1, 1, border_width=1, frame_color=color.black, bgcolor=color.white)

// Add Telegram Message to Dashboard
table.cell(myTable, 0, 0, "Join Telegram @free_fx_pro", bgcolor=color.blue, text_color=color.white, text_size=size.normal)