// This Pine Script™ code is subject to the terms of the Mozilla Public License 2.0 at https://mozilla.org/MPL/2.0/
// © leandrolopezf1920

//By using the Sure Forex System you will assess this range between 04:00 GMT and 06 GMT, 
//and take advantage when the currency pair breaks out of the base line range; you can change the GMT in INPUT
//
//SELL TRADE
//If the 89 EMA (the blue line) is ABOVE the chart, place a pending sell order (sellstop) 10.5 pips BELOW the lower line of the chart. 
//Set your stop loss at 10.5 pips ABOVE the upper line of the chart and your take profit at 60 - 70 pips
//
//BUY TRADE
//If the 89 EMA (the blue line) is BELOW the chart, place a pending buy order (buystop) 10.5 pips ABOVE the top line of the chart. 
//Set your stop loss at 10.5 pips BELOW the bottom line of the chart and your take profit at 60 - 70 pips
//
//INDECISION TRADE
//If the 89 ema crosses the box, place a BUY TRADE and a SELL TRADE with the above parameters and wait for one to execute
//
//TimeFrame 15m

//@version=5
indicator("SURE FOREX BREAKOUT SYSTEM BY LEO", overlay=true)

// Input para seleccionar la zona horaria GMT
gmtOffset = input.int(-5, title="Offset GMT", minval=-12, maxval=14)

// Inputs para seleccionar la hora de inicio y fin (en GMT)
startHour = input.int(11, title="Hora de Inicio (GMT)", minval=0, maxval=22)
startMinute = input.int(15, title="Minuto de Inicio (GMT)", minval=0, maxval=59)
endHour = input.int(13, title="Hora de Fin (GMT)", minval=0, maxval=23)
endMinute = input.int(15, title="Minuto de Fin (GMT)", minval=0, maxval=59)

// Obtener la hora y minuto actual ajustados a la zona horaria seleccionada
currentHour = hour(time - (gmtOffset * 3600000))
currentMinute = minute(time - (gmtOffset * 3600000))

// Ajustar para empezar 15 minutos antes de la hora de inicio
earlyStartHour = startHour
earlyStartMinute = startMinute - 15
if earlyStartMinute < 0
    earlyStartMinute := 60 + earlyStartMinute
    earlyStartHour := earlyStartHour - 1
if earlyStartHour < 0
    earlyStartHour := 23

// Variables para almacenar los valores más altos y más bajos del rango de tiempo
var float sessionHigh = na
var float sessionLow = na
var box cuadro = na

// Verificar si la vela está dentro del rango de tiempo o 15 minutos antes
isInSession = (currentHour > earlyStartHour or (currentHour == earlyStartHour and currentMinute >= earlyStartMinute)) and 
              (currentHour < endHour or (currentHour == endHour and currentMinute < endMinute))

// Resetear el valor más alto y más bajo al comienzo de la sesión anticipada
if (currentHour == earlyStartHour and currentMinute == earlyStartMinute)
    sessionHigh := high
    sessionLow := low

// Capturar el valor más alto y más bajo durante el periodo
if isInSession
    sessionHigh := math.max(na(sessionHigh) ? high : sessionHigh, high)
    sessionLow := math.min(na(sessionLow) ? low : sessionLow, low)

// Dibujar el cuadro azul con transparencia del 50% entre el máximo y el mínimo del rango de tiempo
if isInSession
    if na(cuadro)
        cuadro := box.new(left=bar_index, top=sessionHigh, right=na, bottom=sessionLow, border_color=#2195f3, border_width=1, bgcolor=#2195f334)
    else
        box.set_right(cuadro, bar_index)
        box.set_top(cuadro, sessionHigh)
        box.set_bottom(cuadro, sessionLow)
else if (currentHour >= endHour and currentMinute >= endMinute)
    cuadro := na  // Al terminar el rango de tiempo, eliminar el cuadro

// Cálculo de la EMA de 89 periodos
ema89 = ta.ema(close, 89)

// Graficar la EMA de 89 en color azul
plot(ema89, color=color.blue, linewidth=2)

// Definir valor del pip (para 5 dígitos)
pip = syminfo.mintick * 10

// Condición para la orden de compra: el cierre de una vela está 20 pips por encima del máximo del cuadro
buySignal = (close >= sessionHigh + 20 * pip) and (ema89 < sessionLow)

// Condición para la orden de venta: el cierre de una vela está 20 pips por debajo del mínimo del cuadro
sellSignal = (close <= sessionLow - 20 * pip) and (ema89 > sessionHigh)

// Variables para crear las señales de compra y venta, y las líneas de take profit
var label buyLabel = na
var label sellLabel = na
var line tpLineBuy = na
var line tpLineSell = na

// Manejo de la señal de compra
if buySignal
    label.delete(buyLabel)
    line.delete(tpLineBuy)
    label.delete(sellLabel)
    line.delete(tpLineSell)
    
    // Marcar la orden de compra
    buyLabel := label.new(bar_index, close, style=label.style_label_right, color=color.blue, text="BUY", textcolor=color.white, size=size.normal)
    
    // Establecer el take profit 70 pips por encima de la señal de compra
    takeProfitBuy = close + 70 * pip
    tpLineBuy := line.new(bar_index, takeProfitBuy, bar_index + 10, takeProfitBuy, color=color.green, width=2, style=line.style_dotted)

// Manejo de la señal de venta
if sellSignal
    label.delete(buyLabel)
    line.delete(tpLineBuy)
    label.delete(sellLabel)
    line.delete(tpLineSell)
    
    // Marcar la orden de venta
    sellLabel := label.new(bar_index, close, style=label.style_label_right, color=color.red, text="SELL", textcolor=color.white, size=size.normal)
    
    // Establecer el take profit 70 pips por debajo de la señal de venta
    takeProfitSell = close - 70 * pip
    tpLineSell := line.new(bar_index, takeProfitSell, bar_index + 10, takeProfitSell, color=color.red, width=2, style=line.style_dotted)
