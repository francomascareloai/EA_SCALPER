/*
   Generated by EX4-TO-MQ4 decompiler V4.0.223.1c []
   Website: http://purebeam.biz
   E-mail : purebeam@gmail.com
*/
#property copyright "Nikolay"
#property link      "abaci@mail.ru"

double g_pips_76 = 500.0;
double gd_84 = 20.0;
double gd_92 = 10.0;
extern string  a = "работа советника в пятницу до";
extern bool    CloseFriday=true;        // использовать ограничение по времени в пятницу true, не использовать false
extern int     CloseFridayHour=19;      // время в пятницу после которого не выставляется первый ордер
extern double LotExponent = 1.59;
extern double Lotsi = 0.1;
extern int lotdecimal = 2;
extern double TakeProfit = 20.0;
extern int PipStep = 34;
extern int MagicNumber = 12324;
extern double slip = 3.0;
extern int MaxTrades = 5;
extern bool mm = TRUE;
extern int risk = 20;
extern bool Trend_Buy = TRUE;
extern bool Trend_Sell = TRUE;
bool gi_164 = FALSE;
double gd_168 = 20.0;
bool gi_176 = FALSE;
bool gi_180 = FALSE;
double gd_184 = 48.0;
double g_price_192;
double gd_200;
double gd_unused_208;
double gd_unused_216;
double g_price_224;
double g_bid_232;
double g_ask_240;
double gd_248;
double gd_256;
double gd_264;
bool gi_272;
extern string gs_ilan_276 = "Ilan";
int gi_284 = 0;
int gi_288;
int gi_292 = 0;
double gd_296;
double gd_304;
int g_pos_312 = 0;
int gi_316;
double gd_320 = 0.0;
bool gi_328 = FALSE;
bool gi_332 = FALSE;
bool gi_336 = FALSE;
int gi_340;
bool gi_344 = FALSE;
double gd_348;
double gd_356;

int init() {
   gd_264 = MarketInfo(Symbol(), MODE_SPREAD) * Point;
   return (0);
}

int deinit() {
   return (0);
}

int start() {
   double l_iclose_0;
   double l_iclose_8;

   if (gi_176) TrailingAlls(gd_84, gd_92, g_price_224);
   if (mm) gd_304 = MathCeil(AccountBalance() * risk / 10000.0) / 100.0;
   else gd_304 = Lotsi;
   if (gd_304 > 15.64) gd_304 = 15.64;
   if (gi_180) {
      if (TimeCurrent() >= gi_288) {
         CloseThisSymbolAll();
         Print("Closed All due to TimeOut");
      }
   }
   if (gi_284 == Time[0]) return (0);
   gi_284 = Time[0];
   double ld_16 = CalculateProfit();
   if (gi_164) {
      if (ld_16 < 0.0 && MathAbs(ld_16) > gd_168 / 100.0 * AccountEquityHigh()) {
         CloseThisSymbolAll();
         Print("Closed All due to Stop Out");
         gi_344 = FALSE;
      }
   }
   gi_316 = CountTrades();
   if (gi_316 == 0) gi_272 = FALSE;
   for (g_pos_312 = OrdersTotal() - 1; g_pos_312 >= 0; g_pos_312--) {
      OrderSelect(g_pos_312, SELECT_BY_POS, MODE_TRADES);
      if (OrderSymbol() != Symbol() || OrderMagicNumber() != MagicNumber) continue;
      if (OrderSymbol() == Symbol() && OrderMagicNumber() == MagicNumber) {
         if (OrderType() == OP_BUY) {
            gi_332 = TRUE;
            gi_336 = FALSE;
            break;
         }
      }
      if (OrderSymbol() == Symbol() && OrderMagicNumber() == MagicNumber) {
         if (OrderType() == OP_SELL) {
            gi_332 = FALSE;
            gi_336 = TRUE;
            break;
         }
      }
   }
   if (gi_316 > 0 && gi_316 < MaxTrades) {
      RefreshRates();
      gd_248 = FindLastBuyPrice();
      gd_256 = FindLastSellPrice();
      if (gi_332 && gd_248 - Ask >= PipStep * Point) gi_328 = TRUE;
      if (gi_336 && Bid - gd_256 >= PipStep * Point) gi_328 = TRUE;
   }
   if (gi_316 < 1) {
      gi_336 = FALSE;
      gi_332 = FALSE;
      gi_328 = TRUE;
      gd_200 = AccountEquity();
   }
   if (gi_328) {
      gd_248 = FindLastBuyPrice();
      gd_256 = FindLastSellPrice();
      if (gi_336) {
         gi_292 = gi_316;
         gd_296 = NormalizeDouble(gd_304 * MathPow(LotExponent, gi_292), lotdecimal);
         RefreshRates();
         gi_340 = OpenPendingOrder(1, gd_296, Bid, slip, Ask, 0, 0, gs_ilan_276 + "-" + gi_292, MagicNumber, 0, HotPink);
         if (gi_340 < 0) {
            Print("Error: ", GetLastError());
            return (0);
         }
         gd_256 = FindLastSellPrice();
         gi_328 = FALSE;
         gi_344 = TRUE;
      } else {
         if (gi_332) {
            gi_292 = gi_316;
            gd_296 = NormalizeDouble(gd_304 * MathPow(LotExponent, gi_292), lotdecimal);
            gi_340 = OpenPendingOrder(0, gd_296, Ask, slip, Bid, 0, 0, gs_ilan_276 + "-" + gi_292, MagicNumber, 0, Lime);
            if (gi_340 < 0) {
               Print("Error: ", GetLastError());
               return (0);
            }
            gd_248 = FindLastBuyPrice();
            gi_328 = FALSE;
            gi_344 = TRUE;
         }
      }
   }
   if (gi_328 && gi_316 < 1) {
      l_iclose_0 = iClose(Symbol(), 0, 2);
      l_iclose_8 = iClose(Symbol(), 0, 1);
      g_bid_232 = Bid;
      g_ask_240 = Ask;
      if (!gi_336 && !gi_332) {
         gi_292 = gi_316;
         gd_296 = NormalizeDouble(gd_304 * MathPow(LotExponent, gi_292), lotdecimal);
          if(CloseFriday==true&&DayOfWeek()==5&&TimeCurrent()>=StrToTime(CloseFridayHour+":00"))return(0); // запрет в пятницу
         if (l_iclose_0 > l_iclose_8) {
            if (iRSI(NULL, PERIOD_H1, 14, PRICE_CLOSE, 0) > 25.0 && Trend_Sell) {
               gi_340 = OpenPendingOrder(1, gd_296, g_bid_232, slip, g_bid_232, 0, 0, gs_ilan_276 + "-" + gi_292, MagicNumber, 0, Red);
               if (gi_340 < 0) {
                  Print("Error: ", GetLastError());
                  return (0);
               }
               gd_248 = FindLastBuyPrice();
               gi_344 = TRUE;
            }
         } else {
            if(CloseFriday==true&&DayOfWeek()==5&&TimeCurrent()>=StrToTime(CloseFridayHour+":00"))return(0); // запрет в пятницу
            if (iRSI(NULL, PERIOD_H1, 14, PRICE_CLOSE, 0) < 75.0 && Trend_Buy) {
               gi_340 = OpenPendingOrder(0, gd_296, g_ask_240, slip, g_ask_240, 0, 0, gs_ilan_276 + "-" + gi_292, MagicNumber, 0, Blue);
               if (gi_340 < 0) {
                  Print("Error: ", GetLastError());
                  return (0);
               }
               gd_256 = FindLastSellPrice();
               gi_344 = TRUE;
            }
         }
         if (gi_340 > 0) gi_288 = TimeCurrent() + 60.0 * (60.0 * gd_184);
         gi_328 = FALSE;
      }
   }
   gi_316 = CountTrades();
   g_price_224 = 0;
   double ld_24 = 0;
   for (g_pos_312 = OrdersTotal() - 1; g_pos_312 >= 0; g_pos_312--) {
      OrderSelect(g_pos_312, SELECT_BY_POS, MODE_TRADES);
      if (OrderSymbol() != Symbol() || OrderMagicNumber() != MagicNumber) continue;
      if (OrderSymbol() == Symbol() && OrderMagicNumber() == MagicNumber) {
         if (OrderType() == OP_BUY || OrderType() == OP_SELL) {
            g_price_224 += OrderOpenPrice() * OrderLots();
            ld_24 += OrderLots();
         }
      }
   }
   if (gi_316 > 0) g_price_224 = NormalizeDouble(g_price_224 / ld_24, Digits);
   if (gi_344) {
      for (g_pos_312 = OrdersTotal() - 1; g_pos_312 >= 0; g_pos_312--) {
         OrderSelect(g_pos_312, SELECT_BY_POS, MODE_TRADES);
         if (OrderSymbol() != Symbol() || OrderMagicNumber() != MagicNumber) continue;
         if (OrderSymbol() == Symbol() && OrderMagicNumber() == MagicNumber) {
            if (OrderType() == OP_BUY) {
               g_price_192 = g_price_224 + TakeProfit * Point;
               gd_unused_208 = g_price_192;
               gd_320 = g_price_224 - g_pips_76 * Point;
               gi_272 = TRUE;
            }
         }
         if (OrderSymbol() == Symbol() && OrderMagicNumber() == MagicNumber) {
            if (OrderType() == OP_SELL) {
               g_price_192 = g_price_224 - TakeProfit * Point;
               gd_unused_216 = g_price_192;
               gd_320 = g_price_224 + g_pips_76 * Point;
               gi_272 = TRUE;
            }
         }
      }
   }
   if (gi_344) {
      if (gi_272 == TRUE) {
         for (g_pos_312 = OrdersTotal() - 1; g_pos_312 >= 0; g_pos_312--) {
            OrderSelect(g_pos_312, SELECT_BY_POS, MODE_TRADES);
            if (OrderSymbol() != Symbol() || OrderMagicNumber() != MagicNumber) continue;
            if (OrderSymbol() == Symbol() && OrderMagicNumber() == MagicNumber) OrderModify(OrderTicket(), g_price_224, OrderStopLoss(), g_price_192, 0, Yellow);
            gi_344 = FALSE;
         }
      }
   }
   return (0);
}

int CountTrades() {
   int l_count_0 = 0;
   for (int l_pos_4 = OrdersTotal() - 1; l_pos_4 >= 0; l_pos_4--) {
      OrderSelect(l_pos_4, SELECT_BY_POS, MODE_TRADES);
      if (OrderSymbol() != Symbol() || OrderMagicNumber() != MagicNumber) continue;
      if (OrderSymbol() == Symbol() && OrderMagicNumber() == MagicNumber)
         if (OrderType() == OP_SELL || OrderType() == OP_BUY) l_count_0++;
   }
   return (l_count_0);
}

void CloseThisSymbolAll() {
   for (int l_pos_0 = OrdersTotal() - 1; l_pos_0 >= 0; l_pos_0--) {
      OrderSelect(l_pos_0, SELECT_BY_POS, MODE_TRADES);
      if (OrderSymbol() == Symbol()) {
         if (OrderSymbol() == Symbol() && OrderMagicNumber() == MagicNumber) {
            if (OrderType() == OP_BUY) OrderClose(OrderTicket(), OrderLots(), Bid, slip, Blue);
            if (OrderType() == OP_SELL) OrderClose(OrderTicket(), OrderLots(), Ask, slip, Red);
         }
         Sleep(1000);
      }
   }
}

int OpenPendingOrder(int ai_0, double a_lots_4, double a_price_12, int a_slippage_20, double ad_24, int ai_32, int ai_36, string a_comment_40, int a_magic_48, int a_datetime_52, color a_color_56) {
   int l_ticket_60 = 0;
   int l_error_64 = 0;
   int l_count_68 = 0;
   int li_72 = 100;
   switch (ai_0) {
   case 2:
      for (l_count_68 = 0; l_count_68 < li_72; l_count_68++) {
         l_ticket_60 = OrderSend(Symbol(), OP_BUYLIMIT, a_lots_4, a_price_12, a_slippage_20, StopLong(ad_24, ai_32), TakeLong(a_price_12, ai_36), a_comment_40, a_magic_48, a_datetime_52, a_color_56);
         l_error_64 = GetLastError();
         if (l_error_64 == 0/* NO_ERROR */) break;
         if (!((l_error_64 == 4/* SERVER_BUSY */ || l_error_64 == 137/* BROKER_BUSY */ || l_error_64 == 146/* TRADE_CONTEXT_BUSY */ || l_error_64 == 136/* OFF_QUOTES */))) break;
         Sleep(1000);
      }
      break;
   case 4:
      for (l_count_68 = 0; l_count_68 < li_72; l_count_68++) {
         l_ticket_60 = OrderSend(Symbol(), OP_BUYSTOP, a_lots_4, a_price_12, a_slippage_20, StopLong(ad_24, ai_32), TakeLong(a_price_12, ai_36), a_comment_40, a_magic_48, a_datetime_52, a_color_56);
         l_error_64 = GetLastError();
         if (l_error_64 == 0/* NO_ERROR */) break;
         if (!((l_error_64 == 4/* SERVER_BUSY */ || l_error_64 == 137/* BROKER_BUSY */ || l_error_64 == 146/* TRADE_CONTEXT_BUSY */ || l_error_64 == 136/* OFF_QUOTES */))) break;
         Sleep(5000);
      }
      break;
   case 0:
      for (l_count_68 = 0; l_count_68 < li_72; l_count_68++) {
         RefreshRates();
         l_ticket_60 = OrderSend(Symbol(), OP_BUY, a_lots_4, Ask, a_slippage_20, StopLong(Bid, ai_32), TakeLong(Ask, ai_36), a_comment_40, a_magic_48, a_datetime_52, a_color_56);
         l_error_64 = GetLastError();
         if (l_error_64 == 0/* NO_ERROR */) break;
         if (!((l_error_64 == 4/* SERVER_BUSY */ || l_error_64 == 137/* BROKER_BUSY */ || l_error_64 == 146/* TRADE_CONTEXT_BUSY */ || l_error_64 == 136/* OFF_QUOTES */))) break;
         Sleep(5000);
      }
      break;
   case 3:
      for (l_count_68 = 0; l_count_68 < li_72; l_count_68++) {
         l_ticket_60 = OrderSend(Symbol(), OP_SELLLIMIT, a_lots_4, a_price_12, a_slippage_20, StopShort(ad_24, ai_32), TakeShort(a_price_12, ai_36), a_comment_40, a_magic_48, a_datetime_52, a_color_56);
         l_error_64 = GetLastError();
         if (l_error_64 == 0/* NO_ERROR */) break;
         if (!((l_error_64 == 4/* SERVER_BUSY */ || l_error_64 == 137/* BROKER_BUSY */ || l_error_64 == 146/* TRADE_CONTEXT_BUSY */ || l_error_64 == 136/* OFF_QUOTES */))) break;
         Sleep(5000);
      }
      break;
   case 5:
      for (l_count_68 = 0; l_count_68 < li_72; l_count_68++) {
         l_ticket_60 = OrderSend(Symbol(), OP_SELLSTOP, a_lots_4, a_price_12, a_slippage_20, StopShort(ad_24, ai_32), TakeShort(a_price_12, ai_36), a_comment_40, a_magic_48, a_datetime_52, a_color_56);
         l_error_64 = GetLastError();
         if (l_error_64 == 0/* NO_ERROR */) break;
         if (!((l_error_64 == 4/* SERVER_BUSY */ || l_error_64 == 137/* BROKER_BUSY */ || l_error_64 == 146/* TRADE_CONTEXT_BUSY */ || l_error_64 == 136/* OFF_QUOTES */))) break;
         Sleep(5000);
      }
      break;
   case 1:
      for (l_count_68 = 0; l_count_68 < li_72; l_count_68++) {
         l_ticket_60 = OrderSend(Symbol(), OP_SELL, a_lots_4, Bid, a_slippage_20, StopShort(Ask, ai_32), TakeShort(Bid, ai_36), a_comment_40, a_magic_48, a_datetime_52, a_color_56);
         l_error_64 = GetLastError();
         if (l_error_64 == 0/* NO_ERROR */) break;
         if (!((l_error_64 == 4/* SERVER_BUSY */ || l_error_64 == 137/* BROKER_BUSY */ || l_error_64 == 146/* TRADE_CONTEXT_BUSY */ || l_error_64 == 136/* OFF_QUOTES */))) break;
         Sleep(5000);
      }
   }
   return (l_ticket_60);
}

double StopLong(double ad_0, int ai_8) {
   if (ai_8 == 0) return (0);
   return (ad_0 - ai_8 * Point);
}

double StopShort(double ad_0, int ai_8) {
   if (ai_8 == 0) return (0);
   return (ad_0 + ai_8 * Point);
}

double TakeLong(double ad_0, int ai_8) {
   if (ai_8 == 0) return (0);
   return (ad_0 + ai_8 * Point);
}

double TakeShort(double ad_0, int ai_8) {
   if (ai_8 == 0) return (0);
   return (ad_0 - ai_8 * Point);
}

double CalculateProfit() {
   double ld_ret_0 = 0;
   for (g_pos_312 = OrdersTotal() - 1; g_pos_312 >= 0; g_pos_312--) {
      OrderSelect(g_pos_312, SELECT_BY_POS, MODE_TRADES);
      if (OrderSymbol() != Symbol() || OrderMagicNumber() != MagicNumber) continue;
      if (OrderSymbol() == Symbol() && OrderMagicNumber() == MagicNumber)
         if (OrderType() == OP_BUY || OrderType() == OP_SELL) ld_ret_0 += OrderProfit();
   }
   return (ld_ret_0);
}

void TrailingAlls(int ai_0, int ai_4, double a_price_8) {
   int li_16;
   double l_ord_stoploss_20;
   double l_price_28;
   if (ai_4 != 0) {
      for (int l_pos_36 = OrdersTotal() - 1; l_pos_36 >= 0; l_pos_36--) {
         if (OrderSelect(l_pos_36, SELECT_BY_POS, MODE_TRADES)) {
            if (OrderSymbol() != Symbol() || OrderMagicNumber() != MagicNumber) continue;
            if (OrderSymbol() == Symbol() || OrderMagicNumber() == MagicNumber) {
               if (OrderType() == OP_BUY) {
                  li_16 = NormalizeDouble((Bid - a_price_8) / Point, 0);
                  if (li_16 < ai_0) continue;
                  l_ord_stoploss_20 = OrderStopLoss();
                  l_price_28 = Bid - ai_4 * Point;
                  if (l_ord_stoploss_20 == 0.0 || (l_ord_stoploss_20 != 0.0 && l_price_28 > l_ord_stoploss_20)) OrderModify(OrderTicket(), a_price_8, l_price_28, OrderTakeProfit(), 0, Aqua);
               }
               if (OrderType() == OP_SELL) {
                  li_16 = NormalizeDouble((a_price_8 - Ask) / Point, 0);
                  if (li_16 < ai_0) continue;
                  l_ord_stoploss_20 = OrderStopLoss();
                  l_price_28 = Ask + ai_4 * Point;
                  if (l_ord_stoploss_20 == 0.0 || (l_ord_stoploss_20 != 0.0 && l_price_28 < l_ord_stoploss_20)) OrderModify(OrderTicket(), a_price_8, l_price_28, OrderTakeProfit(), 0, Red);
               }
            }
            Sleep(1000);
         }
      }
   }
}

double AccountEquityHigh() {
   if (CountTrades() == 0) gd_348 = AccountEquity();
   if (gd_348 < gd_356) gd_348 = gd_356;
   else gd_348 = AccountEquity();
   gd_356 = AccountEquity();
   return (gd_348);
}

double FindLastBuyPrice() {
   double l_ord_open_price_0;
   int l_ticket_8;
   double ld_unused_12 = 0;
   int l_ticket_20 = 0;
   for (int l_pos_24 = OrdersTotal() - 1; l_pos_24 >= 0; l_pos_24--) {
      OrderSelect(l_pos_24, SELECT_BY_POS, MODE_TRADES);
      if (OrderSymbol() != Symbol() || OrderMagicNumber() != MagicNumber) continue;
      if (OrderSymbol() == Symbol() && OrderMagicNumber() == MagicNumber && OrderType() == OP_BUY) {
         l_ticket_8 = OrderTicket();
         if (l_ticket_8 > l_ticket_20) {
            l_ord_open_price_0 = OrderOpenPrice();
            ld_unused_12 = l_ord_open_price_0;
            l_ticket_20 = l_ticket_8;
         }
      }
   }
   return (l_ord_open_price_0);
}

double FindLastSellPrice() {
   double l_ord_open_price_0;
   int l_ticket_8;
   double ld_unused_12 = 0;
   int l_ticket_20 = 0;
   for (int l_pos_24 = OrdersTotal() - 1; l_pos_24 >= 0; l_pos_24--) {
      OrderSelect(l_pos_24, SELECT_BY_POS, MODE_TRADES);
      if (OrderSymbol() != Symbol() || OrderMagicNumber() != MagicNumber) continue;
      if (OrderSymbol() == Symbol() && OrderMagicNumber() == MagicNumber && OrderType() == OP_SELL) {
         l_ticket_8 = OrderTicket();
         if (l_ticket_8 > l_ticket_20) {
            l_ord_open_price_0 = OrderOpenPrice();
            ld_unused_12 = l_ord_open_price_0;
            l_ticket_20 = l_ticket_8;
         }
      }
   }
   return (l_ord_open_price_0);
}