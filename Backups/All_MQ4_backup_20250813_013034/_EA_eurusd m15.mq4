/*
   Generated by EX4-TO-MQ4 decompiler V4.0.225.1g []
   Copyright 2015-2021, Mehran_Alman_Forex
   Copyright 2021, https://t.me/Fx_Expert_EA.
*/
#property copyright "Copyright,2011 - ParaSwing"
#property link      "Copyright 2021, https://t.me/Fx_Expert_EA"

#import "paraswing.dll"
   double ValidateAccount(double a0);
   int WTrend(double a0, double a1, double a2, double a3, double a4);
   int TCall(double a0, double a1, int a2, double a3, double a4, double a5, double a6, double a7, double a8, double a9, double a10, double a11, double a12, double a13, double a14, double a15, double a16, double a17, double a18, double a19, double a20, double a21, double a22, double a23, double a24, double a25);
/*
#import "paraswingea.dll"
   string httpGET(string a0, int& a1[]);
#import
*/
double g_iatr_204;
double g_iatr_212;
double g_ilow_220;
double g_ihigh_228;
double g_iopen_236;
double g_iclose_244;
double g_iopen_252;
double g_iclose_260;
double g_ilow_268;
double g_ihigh_276;
double gd_284;
double g_ima_292;
double g_ibands_300;
double g_ibands_308;
double gd_316;
double g_ibands_332;
double g_ibands_340;
double g_istochastic_348;
double g_istochastic_356;
double g_istochastic_364;
double g_istochastic_372;
double g_price_396;
double g_price_404;
double g_ima_460;
double g_ima_468;
int gi_476;
int gi_480;
double gd_484;
double gd_492;
double gd_500;
double gd_508;
int gi_532;
int gi_unused_536;
bool gi_unused_540 = FALSE;
string gs_dummy_544;
string gs_dummy_552;
bool gi_unused_560 = FALSE;
bool gi_unused_564 = FALSE;
string gs_unused_568 = "";
string gs_unused_608 = "FALSE";
string gs_unused_616 = "FALSE";
double gd_664 = 0.0;
bool gi_unused_672 = TRUE;
bool gi_unused_676 = FALSE;
bool gi_unused_680 = FALSE;
bool gi_unused_684 = FALSE;
double gd_688 = 30.0;
double gd_unused_696 = 30.0;
bool gi_704 = TRUE;
string gs_dummy_708;
bool gi_unused_716 = TRUE;
double g_ienvelopes_720;
double g_ienvelopes_728;
double g_ienvelopes_736;
double g_ienvelopes_744;
double g_ienvelopes_752;
double g_ienvelopes_760;
double g_ienvelopes_768;
double g_ienvelopes_776;
double g_ienvelopes_784;
double g_ienvelopes_792;
double g_ienvelopes_800;
double g_ienvelopes_808;
double g_ienvelopes_816;
double g_ienvelopes_824;
double g_ienvelopes_832;
double g_ienvelopes_840;
int gi_unused_848 = 24;
int gi_unused_852 = 12;
int gi_unused_856 = 48;
int gi_unused_860 = 24;
int gi_unused_864 = 6;
int gi_unused_868 = 2;
int gi_unused_872 = 2;
int gi_unused_876 = 1;
int gi_unused_880 = 2;
int gi_unused_884 = 2;
int gi_unused_888 = 0;
int gi_unused_892 = 0;
int gi_unused_896 = 5;
int gi_unused_900 = 0;
int gi_unused_904 = 0;
double gda_unused_908[];
double gda_unused_912[];
double gda_unused_916[];
double gda_unused_920[];
double gda_unused_924[];
double gda_unused_928[];
double gda_unused_932[];
double gda_unused_936[];
double gda_unused_940[];
double g_iatr_1040;
double g_ibands_1516;
double g_ibands_1524;
double g_ibands_1532;
double g_ibands_1540;
int gi_1548 = 0;
int gi_1552 = 0;
int gi_1556 = 0;
bool gi_unused_1560 = FALSE;
double g_ima_1572;
double g_ima_1580;
double gd_unused_1644 = 99999.0;
double gd_unused_1652 = -99999.0;
double gd_unused_1660 = 99999.0;
double gd_unused_1668 = -99999.0;
double gd_unused_1676 = 99999.0;
double gd_unused_1684 = -99999.0;
double gd_unused_1692 = 99999.0;
double gd_unused_1700 = -99999.0;
double gd_unused_1708 = 99999.0;
double gd_unused_1716 = -99999.0;
double gd_unused_1724 = 99999.0;
double gd_unused_1732 = -99999.0;
double gd_unused_1740 = 99999.0;
double gd_unused_1748 = -99999.0;
double gd_unused_1756 = 99999.0;
double gd_unused_1764 = -99999.0;
double gd_unused_1772 = 99999.0;
double gd_unused_1780 = -99999.0;
string g_symbol_1788 = "";
int g_digits_1796 = 5;
double g_point_1800 = 0.0001;
double gd_unused_1808;
double gd_unused_1816;
double gd_1824 = 0.0;
double gd_1832 = 0.0;
string gs_1840;
// string gs_1848;
int gi_1856;
// extern string ClickBank_Order_Number = "AAAAAAAA";
extern int MT4_Account_Key = D'07.09.2014 05:50:07';
double gd_1872 = 0.0;
double gd_1880 = 0.0;
double gd_1888 = 0.0;
int EA_MagicNumber = 20110901;
extern double Percentage_Free_Margin = 10.0;
extern double Trade_With_Fixed_LotSize = 1.0;
extern string EA_Name = "ParaSwing EA";
bool gi_unused_1924 = TRUE;
bool gi_unused_1928 = TRUE;
double gd_unused_1932 = 0.0;
double gd_unused_1940 = 0.0;
double gd_1948 = 0.0;
bool gi_unused_1956 = FALSE;
bool gi_unused_1960 = FALSE;
bool gi_unused_1964 = FALSE;
bool gi_1968 = TRUE;
bool gi_1972 = TRUE;
double gd_1976 = 400.0;
bool gi_unused_1984 = TRUE;
bool gi_unused_1988 = FALSE;
bool gi_unused_1992 = TRUE;
double gd_1996;
double gd_2004 = 0.0;
double gd_unused_2012 = 10.0;
double gd_unused_2020 = 100.0;
string gs_unused_2036 = "";
string gs_unused_2044 = "";
string gs_unused_2052 = "";
string gs_2060 = "";
string gs_unused_2068 = "FALSE";
int g_bars_2076;
string gs_unused_2100 = "FALSE";
string gs_unused_2108 = "FALSE";
string gs_unused_2116 = "FALSE";
string gs_unused_2124 = "FALSE";
double gd_unused_2132 = 0.0005;
double g_bid_2140;
double g_ask_2148;
int gi_unused_2184 = 60;
int gi_unused_2188 = 30;
int gi_unused_2192 = 0;
string gs_unused_2196 = "";
string gs_unused_2204 = "FALSE";
string gs_true_2292 = "True";
double gd_unused_2308 = 0.0;
double gd_unused_2316 = 0.0;
double gd_unused_2324 = 0.0;
string gs_unused_2356 = "";
double gd_unused_2364 = 99999.0;
double gd_unused_2372 = -99999.0;
int gi_unused_2380 = 0;
string gs_unused_2416 = "";
string gs_unused_2424 = "";
string gs_unused_2432 = "";
string gs_unused_2440 = "";
string gs_unused_2448 = "";
string gs_unused_2456 = "";
string gs_unused_2464 = "";
string gs_unused_2472 = "";
string gs_unused_2480 = "";
string gs_unused_2488 = "";
string gs_unused_2496 = "";
double gd_2504;
string gs_unused_2584 = "";
int gi_2604;

double MoneyManagement(string a_symbol_0, double ad_8) {
   double ld_16;
   double ld_24;
   double ld_32;
   double l_lotsize_40;
   double l_lotstep_48;
   double ld_56;
   int li_64;
   double ld_ret_68;
   double ld_76;
   double ld_84;
   double l_tickvalue_92;
   if (gd_664 == 0.0 && gd_492 == 0.0) {
      ld_16 = MarketInfo(a_symbol_0, MODE_MINLOT);
      ld_24 = MarketInfo(a_symbol_0, MODE_MAXLOT);
      ld_32 = gd_1976;
      l_lotsize_40 = MarketInfo(a_symbol_0, MODE_LOTSIZE);
      l_lotstep_48 = MarketInfo(a_symbol_0, MODE_LOTSTEP);
      ld_56 = MathMin(AccountBalance(), AccountEquity()) * gd_484 / 100.0;
      li_64 = 0;
      ld_ret_68 = 0.0;
      if (l_lotstep_48 == 0.01) li_64 = 2;
      if (l_lotstep_48 == 0.1) li_64 = 1;
      ld_ret_68 = ld_56 * (ad_8 / 100.0) / (l_lotsize_40 / ld_32);
      ld_ret_68 = StrToDouble(DoubleToStr(ld_ret_68, li_64));
      if (ld_ret_68 < ld_16) ld_ret_68 = ld_16;
      if (ld_ret_68 > ld_24) ld_ret_68 = ld_24;
      return (ld_ret_68);
   }
   if (gd_492 > 0.0) return (gd_492);
   if (gd_664 > 0.0) {
      ld_76 = 1;
      if (MarketInfo(Symbol(), MODE_DIGITS) == 5.0) ld_76 = 10;
      if (MarketInfo(Symbol(), MODE_DIGITS) == 4.0) ld_76 = 1;
      ld_84 = MathMin(AccountBalance(), AccountEquity()) * (gd_664 / 100.0) / gd_1888;
      ld_84 /= ld_76;
      l_tickvalue_92 = MarketInfo("EURUSD", MODE_TICKVALUE);
      ld_ret_68 = ld_84 / l_tickvalue_92;
      Print(MathMin(AccountBalance(), AccountEquity()), "   ", ld_84, "  ", l_tickvalue_92, "  ", MarketInfo(Symbol(), MODE_TICKSIZE), "   ", MarketInfo(Symbol(), MODE_DIGITS));
      return (ld_ret_68);
   }
   return (0.0);
}

double StopLong(double ad_0, double ad_8, double ad_16, double ad_24) {
   if (ad_8 == 0.0) return (0);
   return (NormalizeDouble(ad_0 - MathAbs(ad_8) * ad_16, ad_24));
}

double StopShrt(double ad_0, double ad_8, double ad_16, double ad_24) {
   if (ad_8 == 0.0) return (0);
   return (NormalizeDouble(ad_0 + MathAbs(ad_8) * ad_16, ad_24));
}

double TakeLong(double ad_0, double ad_8, double ad_16, double ad_24) {
   if (ad_8 == 0.0) return (0);
   return (NormalizeDouble(ad_0 + MathAbs(ad_8) * ad_16, ad_24));
}

double TakeShrt(double ad_0, double ad_8, double ad_16, double ad_24) {
   if (ad_8 == 0.0) return (0);
   return (NormalizeDouble(ad_0 - MathAbs(ad_8) * ad_16, ad_24));
}

void CloseAll(string a_symbol_0, int a_magic_8, int a_cmd_12, int ai_16, int ai_20, string as_24) {
   int l_cmd_44;
   int li_unused_48;
   bool li_52;
   int li_56;
   double l_price_60;
   double l_price_68;
   int l_error_76;
   bool li_32 = FALSE;
   if (a_symbol_0 == "None") li_32 = TRUE;
   bool li_36 = FALSE;
   if (a_magic_8 == 0) li_36 = TRUE;
   for (int l_pos_40 = OrdersTotal() - 1; l_pos_40 >= 0; l_pos_40--) {
      if (OrderSelect(l_pos_40, SELECT_BY_POS, MODE_TRADES) != FALSE) {
         if (li_36) a_magic_8 = OrderMagicNumber();
         if (a_magic_8 == OrderMagicNumber()) {
            if (gi_476 == OrderMagicNumber()) {
               if (li_32) a_symbol_0 = OrderSymbol();
               if (a_symbol_0 == OrderSymbol()) {
                  g_point_1800 = MarketInfo(a_symbol_0, MODE_POINT);
                  g_digits_1796 = MarketInfo(a_symbol_0, MODE_DIGITS);
                  if (g_point_1800 == 0.001) {
                     g_point_1800 = 0.01;
                     g_digits_1796 = 3;
                  } else {
                     if (g_point_1800 == 0.00001) {
                        g_point_1800 = 0.0001;
                        g_digits_1796 = 5;
                     }
                  }
                  l_cmd_44 = OrderType();
                  if (l_cmd_44 != a_cmd_12 && a_cmd_12 != 1024) continue;
                  li_unused_48 = 0;
                  li_52 = FALSE;
                  li_56 = ai_16;
                  while (!li_52) {
                     while (IsTradeContextBusy()) Sleep(10);
                     RefreshRates();
                     l_price_60 = NormalizeDouble(MarketInfo(a_symbol_0, MODE_ASK), g_digits_1796);
                     l_price_68 = NormalizeDouble(MarketInfo(a_symbol_0, MODE_BID), g_digits_1796);
                     if (l_cmd_44 == OP_BUY) OrderClose(OrderTicket(), OrderLots(), l_price_68, ai_20 * g_point_1800, CLR_NONE);
                     else
                        if (l_cmd_44 == OP_SELL) OrderClose(OrderTicket(), OrderLots(), l_price_60, ai_20 * g_point_1800, CLR_NONE);
                     l_error_76 = GetLastError();
                     switch (l_error_76) {
                     case 135/* PRICE_CHANGED */: continue;
                     case 138/* REQUOTE */: continue;
                     case 0/* NO_ERROR */:
                        li_52 = TRUE;
                        break;
                     case 130/* INVALID_STOPS */:
                     case 4/* SERVER_BUSY */:
                     case 6/* NO_CONNECTION */:
                     case 129/* INVALID_PRICE */:
                     case 136/* OFF_QUOTES */:
                     case 137/* BROKER_BUSY */:
                     case 146/* TRADE_CONTEXT_BUSY */:
                        li_56++;
                        break;
                     case 131/* INVALID_TRADE_VOLUME */:
                        li_52 = TRUE;
                        Alert(as_24 + " Invalid Lots");
                        break;
                     case 132/* MARKET_CLOSED */:
                        li_52 = TRUE;
                        Alert(as_24 + " Market Close");
                        break;
                     case 133/* TRADE_DISABLED */:
                        li_52 = TRUE;
                        Alert(as_24 + " Trades Disabled");
                        break;
                     case 134/* NOT_ENOUGH_MONEY */:
                        li_52 = TRUE;
                        Alert(as_24 + " Not Enough Money");
                        break;
                     case 148/* ERR_TRADE_TOO_MANY_ORDERS */:
                        li_52 = TRUE;
                        Alert(as_24 + " Too Many Orders");
                        break;
                     case 149/* ? */:
                        li_52 = TRUE;
                        Alert(as_24 + " Hedge is prohibited");
                        break;
                     case 1/* NO_RESULT */:
                     default:
                        li_52 = TRUE;
                        Print("Unknown Error - " + l_error_76);
                     }
                     if (li_56 > 10) li_52 = TRUE;
                  }
               }
            }
         }
      }
   }
}

int EnterLong(string a_symbol_0, double ad_8, string a_comment_16, int ai_24, int ai_28, int a_magic_32, int ai_36, int ai_40) {
   int l_ticket_68;
   int li_unused_72;
   bool li_76;
   int l_count_80;
   double l_lots_84;
   double l_price_92;
   double ld_100;
   double l_price_108;
   int l_error_116;
   g_point_1800 = MarketInfo(a_symbol_0, MODE_POINT);
   g_digits_1796 = MarketInfo(a_symbol_0, MODE_DIGITS);
   if (g_point_1800 == 0.001) {
      g_point_1800 = 0.01;
      g_digits_1796 = 3;
   } else {
      if (g_point_1800 == 0.00001) {
         g_point_1800 = 0.0001;
         g_digits_1796 = 5;
      }
   }
   double l_maxlot_44 = MarketInfo(a_symbol_0, MODE_MAXLOT);
   double ld_52 = ad_8;
   int li_60 = 1;
   if (ad_8 > l_maxlot_44) li_60 = MathFloor(ad_8 / l_maxlot_44) + 1.0;
   for (int l_count_64 = 0; l_count_64 < li_60; l_count_64++) {
      l_ticket_68 = -1;
      li_unused_72 = 0;
      li_76 = FALSE;
      l_count_80 = 0;
      l_lots_84 = NormalizeDouble(ad_8 / MathMax(li_60, 1), 2);
      if (ld_52 - l_maxlot_44 <= 0.0) l_lots_84 = ld_52;
      while (!li_76) {
         while (IsTradeContextBusy()) Sleep(10);
         RefreshRates();
         l_price_92 = NormalizeDouble(MarketInfo(a_symbol_0, MODE_ASK), g_digits_1796);
         ld_100 = NormalizeDouble(MarketInfo(a_symbol_0, MODE_BID), g_digits_1796);
         l_ticket_68 = OrderSend(a_symbol_0, OP_BUY, l_lots_84, l_price_92, 0, 0.0, 0.0, a_comment_16, a_magic_32, ai_40 * g_point_1800, CLR_NONE);
         l_price_108 = StopLong(l_price_92, ai_24, g_point_1800, g_digits_1796);
         l_error_116 = GetLastError();
         if (l_error_116 == 0/* NO_ERROR */) {
            gs_2060 = "BUYTRADE";
            if (OrderMagicNumber() == a_magic_32) gs_unused_2044 = "BUY2";
            if (OrderMagicNumber() == gi_476) gs_unused_2044 = "BUY2";
            gs_true_2292 = "False";
         }
         switch (l_error_116) {
         case 135/* PRICE_CHANGED */: continue;
         case 138/* REQUOTE */: continue;
         case 0/* NO_ERROR */:
            li_76 = TRUE;
            if (OrderSelect(l_ticket_68, SELECT_BY_TICKET)) OrderModify(l_ticket_68, OrderOpenPrice(), l_price_108, TakeLong(l_price_92, ai_28, g_point_1800, g_digits_1796), 0, CLR_NONE);
            if (gi_1968 == TRUE) {
               ObjectCreate("BUYSYM" + l_ticket_68, OBJ_ARROW, 0, OrderOpenTime(), OrderOpenPrice());
               ObjectSet("BUYSYM" + l_ticket_68, OBJPROP_ARROWCODE, 221);
               ObjectSet("BUYSYM" + l_ticket_68, OBJPROP_COLOR, Lime);
            }
            if (gi_1972 == TRUE) PlaySound("alert2.wav");
            break;
         case 130/* INVALID_STOPS */:
         case 4/* SERVER_BUSY */:
         case 6/* NO_CONNECTION */:
         case 129/* INVALID_PRICE */:
         case 136/* OFF_QUOTES */:
         case 137/* BROKER_BUSY */:
         case 146/* TRADE_CONTEXT_BUSY */:
            l_count_80++;
            break;
         case 131/* INVALID_TRADE_VOLUME */:
            li_76 = TRUE;
            Alert(a_comment_16 + " Invalid Lots");
            break;
         case 132/* MARKET_CLOSED */:
            li_76 = TRUE;
            Alert(a_comment_16 + " Market Close");
            break;
         case 133/* TRADE_DISABLED */:
            li_76 = TRUE;
            Alert(a_comment_16 + " Trades Disabled");
            break;
         case 134/* NOT_ENOUGH_MONEY */:
            li_76 = TRUE;
            Alert(a_comment_16 + " Not Enough Money");
            break;
         case 148/* ERR_TRADE_TOO_MANY_ORDERS */:
            li_76 = TRUE;
            Alert(a_comment_16 + " Too Many Orders");
            break;
         case 149/* ? */:
            li_76 = TRUE;
            Alert(a_comment_16 + " Hedge is prohibited");
            break;
         case 1/* NO_RESULT */:
         default:
            li_76 = TRUE;
            Print("Unknown Error - " + l_error_116);
         }
         if (l_count_80 > ai_36) li_76 = TRUE;
      }
      ld_52 -= l_lots_84;
   }
   return (l_ticket_68);
}

int EnterShrt(string a_symbol_0, double ad_8, string a_comment_16, int ai_24, int ai_28, int a_magic_32, int ai_36, int ai_40) {
   int l_ticket_68;
   int li_unused_72;
   bool li_76;
   int l_count_80;
   double l_lots_84;
   double ld_92;
   double l_price_100;
   double l_price_108;
   int l_error_116;
   g_point_1800 = MarketInfo(a_symbol_0, MODE_POINT);
   g_digits_1796 = MarketInfo(a_symbol_0, MODE_DIGITS);
   if (g_point_1800 == 0.001) {
      g_point_1800 = 0.01;
      g_digits_1796 = 3;
   } else {
      if (g_point_1800 == 0.00001) {
         g_point_1800 = 0.0001;
         g_digits_1796 = 5;
      }
   }
   double l_maxlot_44 = MarketInfo(a_symbol_0, MODE_MAXLOT);
   double ld_52 = ad_8;
   int li_60 = 1;
   if (ad_8 > l_maxlot_44) li_60 = MathFloor(ad_8 / l_maxlot_44) + 1.0;
   for (int l_count_64 = 0; l_count_64 < li_60; l_count_64++) {
      l_ticket_68 = -1;
      li_unused_72 = 0;
      li_76 = FALSE;
      l_count_80 = 0;
      l_lots_84 = NormalizeDouble(ad_8 / MathMax(li_60, 1), 2);
      if (ld_52 - l_maxlot_44 <= 0.0) l_lots_84 = ld_52;
      while (!li_76) {
         while (IsTradeContextBusy()) Sleep(10);
         RefreshRates();
         ld_92 = NormalizeDouble(MarketInfo(a_symbol_0, MODE_ASK), g_digits_1796);
         l_price_100 = NormalizeDouble(MarketInfo(a_symbol_0, MODE_BID), g_digits_1796);
         l_price_108 = StopShrt(l_price_100, ai_24, g_point_1800, g_digits_1796);
         l_ticket_68 = OrderSend(a_symbol_0, OP_SELL, l_lots_84, l_price_100, 0, 0.0, 0.0, a_comment_16, a_magic_32, ai_40 * g_point_1800, CLR_NONE);
         l_error_116 = GetLastError();
         if (l_error_116 == 0/* NO_ERROR */) {
            gs_2060 = "SELLTRADE";
            if (OrderMagicNumber() == a_magic_32) gs_unused_2044 = "SELL2";
            if (OrderMagicNumber() == gi_476) gs_unused_2044 = "SELL2";
            gs_true_2292 = "False";
         }
         switch (l_error_116) {
         case 135/* PRICE_CHANGED */: continue;
         case 138/* REQUOTE */: continue;
         case 0/* NO_ERROR */:
            li_76 = TRUE;
            if (OrderSelect(l_ticket_68, SELECT_BY_TICKET)) OrderModify(l_ticket_68, OrderOpenPrice(), l_price_108, TakeShrt(l_price_100, ai_28, g_point_1800, g_digits_1796), 0, CLR_NONE);
            if (gi_1968 == TRUE) {
               ObjectCreate("SELLSYM" + l_ticket_68, OBJ_ARROW, 0, OrderOpenTime(), OrderOpenPrice());
               ObjectSet("SELLSYM" + l_ticket_68, OBJPROP_ARROWCODE, 222);
               ObjectSet("SELLSYM" + l_ticket_68, OBJPROP_COLOR, Red);
            }
            if (gi_1972 == TRUE) PlaySound("alert2.wav");
            break;
         case 130/* INVALID_STOPS */:
         case 4/* SERVER_BUSY */:
         case 6/* NO_CONNECTION */:
         case 129/* INVALID_PRICE */:
         case 136/* OFF_QUOTES */:
         case 137/* BROKER_BUSY */:
         case 146/* TRADE_CONTEXT_BUSY */:
            l_count_80++;
            break;
         case 131/* INVALID_TRADE_VOLUME */:
            li_76 = TRUE;
            Alert(a_comment_16 + " Invalid Lots");
            break;
         case 132/* MARKET_CLOSED */:
            li_76 = TRUE;
            Alert(a_comment_16 + " Market Close");
            break;
         case 133/* TRADE_DISABLED */:
            li_76 = TRUE;
            Alert(a_comment_16 + " Trades Disabled");
            break;
         case 134/* NOT_ENOUGH_MONEY */:
            li_76 = TRUE;
            Alert(a_comment_16 + " Not Enough Money");
            break;
         case 148/* ERR_TRADE_TOO_MANY_ORDERS */:
            li_76 = TRUE;
            Alert(a_comment_16 + " Too Many Orders");
            break;
         case 149/* ? */:
            li_76 = TRUE;
            Alert(a_comment_16 + " Hedge is prohibited");
            break;
         case 1/* NO_RESULT */:
         default:
            li_76 = TRUE;
            Print("Unknown Error - " + l_error_116);
         }
         if (l_count_80 > ai_36) li_76 = TRUE;
      }
      ld_52 -= l_lots_84;
   }
   return (l_ticket_68);
}

void QBUY3() {
   g_symbol_1788 = Symbol();
   g_point_1800 = MarketInfo(g_symbol_1788, MODE_POINT);
   g_digits_1796 = MarketInfo(g_symbol_1788, MODE_DIGITS);
   if (g_point_1800 == 0.00001) g_point_1800 = 0.0001;
   else
      if (g_point_1800 == 0.001) g_point_1800 = 0.01;
   gd_1996 = gd_1976 / 40.0;
   double ld_0 = 0.0;
   int li_8 = 3;
   int li_12 = gd_1888;
   int li_16 = gd_1824;
   int li_20 = 10;
   string ls_24 = gs_1840 + " - Buy  ";
   if (ld_0 <= 0.0) {
      ld_0 = MoneyManagement(g_symbol_1788, gd_1996);
      if (gd_1996 <= 0.0) {
         Alert(ls_24 + "- Invalid Lots/Risk settings!");
         return;
      }
   }
   Comment(gs_1840 + " - Buy |  please wait ...");
   EnterLong(g_symbol_1788, ld_0, ls_24, li_12, li_16, gi_476, li_20, li_8);
   Comment("");
}

void QSELL3() {
   g_symbol_1788 = Symbol();
   g_point_1800 = MarketInfo(g_symbol_1788, MODE_POINT);
   g_digits_1796 = MarketInfo(g_symbol_1788, MODE_DIGITS);
   if (g_point_1800 == 0.00001) g_point_1800 = 0.0001;
   else
      if (g_point_1800 == 0.001) g_point_1800 = 0.01;
   gd_1996 = gd_1976 / 40.0;
   double ld_0 = 0.0;
   int li_8 = 3;
   int li_12 = gd_1888;
   int li_16 = gd_1824;
   int li_20 = 10;
   string ls_24 = gs_1840 + " - Sell";
   if (ld_0 <= 0.0) {
      ld_0 = MoneyManagement(g_symbol_1788, gd_1996);
      if (gd_1996 <= 0.0) {
         Alert(ls_24 + "- Invalid Lots/Risk settings!");
         return;
      }
   }
   Comment(gs_1840 + " - Sell |  please wait ...");
   EnterShrt(g_symbol_1788, ld_0, ls_24, li_12, li_16, gi_476, li_20, li_8);
   Comment("");
}

void Closeorder() {
   int li_0 = 10;
   int li_4 = 10;
   string ls_8 = gs_1840 + " - Close ALL ";
   g_symbol_1788 = Symbol();
   g_point_1800 = MarketInfo(g_symbol_1788, MODE_POINT);
   g_digits_1796 = MarketInfo(g_symbol_1788, MODE_DIGITS);
   if (g_point_1800 == 0.00001) g_point_1800 = 0.0001;
   else
      if (g_point_1800 == 0.001) g_point_1800 = 0.01;
   Comment(ls_8 + " | Closing All  ParaSwing  Orders, please wait ...");
   CloseAll(g_symbol_1788, gi_476, 1024, li_0, li_4, ls_8);
   Comment("");
   gs_2060 = "";
}

void MoveSL(int ai_0, int ai_4) {
   double ld_8;
   int li_24;
   bool li_32;
   int l_digits_28 = MarketInfo(Symbol(), MODE_DIGITS);
   double ld_36 = 1;
   if (MarketInfo(Symbol(), MODE_DIGITS) == 5.0) ld_36 = 10;
   if (MarketInfo(Symbol(), MODE_DIGITS) == 4.0) ld_36 = 1;
   if (ai_0 < 20) li_24 = 20;
   else li_24 = ai_0;
   int l_ord_total_20 = OrdersTotal();
   if (l_ord_total_20 > 0) {
      for (int l_pos_16 = l_ord_total_20 - 1; l_pos_16 >= 0; l_pos_16--) {
         if (OrderSelect(l_pos_16, SELECT_BY_POS, MODE_TRADES) == TRUE) {
            if (OrderMagicNumber() == gi_476) {
               if (OrderSymbol() == Symbol() && OrderType() == OP_SELL) {
                  if (OrderOpenPrice() - Ask > MathAbs(gd_1948 / 3.0) * ld_36 * Point) {
                  }
                  if (OrderOpenPrice() - Ask > MathAbs(gd_1948) * ld_36 * Point) ld_8 = OrderOpenPrice() - 0.75 * (gd_1948 * ld_36) * Point;
                  if (OrderOpenPrice() - Ask > 0.75 * li_24 * Point && OrderOpenPrice() - Ask < li_24 / 0.8 * Point) {
                     li_24 = li_24 / 2.0;
                     ld_8 = Ask + li_24 * Point;
                  }
                  if (OrderOpenPrice() - Ask > li_24 / 0.8 * Point) {
                     li_24 = 0.7 * li_24;
                     ld_8 = Ask + li_24 * Point;
                  }
                  if (MathAbs(ld_8 - OrderStopLoss()) < 10.0 * ld_36 * Point) break;
                  if (ai_4 == 1) li_32 = TRUE;
                  else {
                     if (OrderStopLoss() > NormalizeDouble(ld_8, l_digits_28) || OrderStopLoss() == 0.0) li_32 = TRUE;
                     else li_32 = FALSE;
                  }
                  if (li_32 == TRUE && ld_8 > 0.0)
                     if (OrderModify(OrderTicket(), OrderOpenPrice(), NormalizeDouble(ld_8, l_digits_28), OrderTakeProfit(), OrderExpiration(), CLR_NONE) != TRUE) Print("LastError = ", GetLastError());
               }
               if (OrderSymbol() == Symbol() && OrderType() == OP_BUY) {
                  if (OrderOpenPrice() - Ask > MathAbs(gd_1948 / 3.0) * ld_36 * Point) {
                  }
                  if (Ask - OrderOpenPrice() > MathAbs(gd_1948) * ld_36 * Point) ld_8 = OrderOpenPrice() + 0.75 * (gd_1948 * ld_36) * Point;
                  if (Ask - OrderOpenPrice() > 0.75 * li_24 * Point && Ask - OrderOpenPrice() < li_24 / 0.8 * Point) {
                     li_24 = li_24 / 2.0;
                     ld_8 = Bid - li_24 * Point;
                  }
                  if (Ask - OrderOpenPrice() > li_24 / 0.8 * Point) {
                     li_24 = 0.7 * li_24;
                     ld_8 = Bid - li_24 * Point;
                  }
                  if (MathAbs(ld_8 - OrderStopLoss()) < 10.0 * ld_36 * Point) break;
                  if (ai_4 == 1) li_32 = TRUE;
                  else {
                     if (OrderStopLoss() < NormalizeDouble(ld_8, l_digits_28) || OrderStopLoss() == 0.0) li_32 = TRUE;
                     else li_32 = FALSE;
                  }
                  if (li_32 == TRUE && ld_8 > 0.0)
                     if (OrderModify(OrderTicket(), OrderOpenPrice(), NormalizeDouble(ld_8, l_digits_28), OrderTakeProfit(), OrderExpiration(), CLR_NONE) != TRUE) Print("LastError = ", GetLastError());
               }
            }
         }
      }
   }
}

void Modify(double ad_unused_0) {
   double ld_20;
   double l_iatr_8 = iATR(NULL, PERIOD_H1, 14, 1);
   for (int l_pos_16 = 0; l_pos_16 < OrdersTotal(); l_pos_16++) {
      if (OrderSelect(l_pos_16, SELECT_BY_POS, MODE_TRADES) == FALSE) break;
      if (OrderMagicNumber() != gi_476 || OrderSymbol() != Symbol()) continue;
      ld_20 = 1;
      if (MarketInfo(Symbol(), MODE_DIGITS) == 5.0) ld_20 = 10;
      if (MarketInfo(Symbol(), MODE_DIGITS) == 4.0) ld_20 = 1;
      if (OrderType() == OP_BUY)
         if (High[1] - gd_1888 * ld_20 * Point > OrderStopLoss()) OrderModify(OrderTicket(), OrderOpenPrice(), High[1] - gd_1888 * ld_20 * Point, OrderTakeProfit(), 0);
      if (OrderType() == OP_SELL)
         if (Low[1] + gd_1888 * ld_20 * Point < OrderStopLoss()) OrderModify(OrderTicket(), OrderOpenPrice(), Low[1] + gd_1888 * ld_20 * Point, OrderTakeProfit(), 0);
   }
}

void Modify2(double ad_unused_0) {
   double ld_unused_20;
   double l_iatr_8 = iATR(NULL, PERIOD_H1, 14, 1);
   for (int l_pos_16 = 0; l_pos_16 < OrdersTotal(); l_pos_16++) {
      if (OrderSelect(l_pos_16, SELECT_BY_POS, MODE_TRADES) == FALSE) break;
      if (OrderMagicNumber() != gi_476 || OrderSymbol() != Symbol()) continue;
      ld_unused_20 = 1;
      if (MarketInfo(Symbol(), MODE_DIGITS) == 5.0) ld_unused_20 = 10;
      if (MarketInfo(Symbol(), MODE_DIGITS) == 4.0) ld_unused_20 = 1;
      if (OrderType() == OP_BUY)
         if (g_price_404 > OrderStopLoss()) OrderModify(OrderTicket(), OrderOpenPrice(), g_price_404, OrderTakeProfit(), 0);
      if (OrderType() == OP_SELL)
         if (g_price_396 < OrderStopLoss()) OrderModify(OrderTicket(), OrderOpenPrice(), g_price_396, OrderTakeProfit(), 0);
   }
}

void fillvariables() {
   gd_2504 = 0;
   for (int l_pos_0 = 0; l_pos_0 < OrdersTotal(); l_pos_0++) {
      if (OrderSelect(l_pos_0, SELECT_BY_POS, MODE_TRADES) == FALSE) break;
      if (OrderMagicNumber() != gi_476 || OrderSymbol() != Symbol()) continue;
      if (OrderType() == OP_BUY) {
         gs_unused_2044 = "BUY2";
         gs_2060 = "BUYTRADE";
      }
      if (OrderType() == OP_SELL) {
         gs_unused_2044 = "2";
         gs_2060 = "SELLTRADE";
      }
   }
}

void totalorders() {
   gd_2504 = 0;
   for (int l_pos_0 = 0; l_pos_0 < OrdersTotal(); l_pos_0++) {
      if (OrderSelect(l_pos_0, SELECT_BY_POS, MODE_TRADES) == FALSE) break;
      if (OrderMagicNumber() != gi_476 || OrderSymbol() != Symbol()) continue;
      gd_2504 += 1.0;
   }
}

void CheckForOpen() {
   gd_2504 = 0;
   int li_unused_36 = gi_2604;
   int li_unused_40 = 0;
   int li_unused_44 = 14;
   int li_unused_48 = 14;
   int li_unused_52 = 9;
   if (g_bars_2076 != Bars) {
      g_iatr_204 = iATR(NULL, PERIOD_D1, 14, 1);
      g_iatr_212 = iATR(NULL, PERIOD_W1, 14, 1);
      g_ima_1580 = iMA(NULL, PERIOD_W1, 1, 0, MODE_EMA, PRICE_TYPICAL, 0);
      g_ienvelopes_720 = iEnvelopes(NULL, PERIOD_W1, 1, MODE_EMA, 1, PRICE_TYPICAL, 0.75, MODE_UPPER, 1);
      g_ienvelopes_728 = iEnvelopes(NULL, PERIOD_W1, 1, MODE_EMA, 1, PRICE_TYPICAL, 0.75, MODE_LOWER, 1);
      g_ienvelopes_736 = iEnvelopes(NULL, PERIOD_H1, 10, MODE_EMA, 1, PRICE_CLOSE, 0.2, MODE_UPPER, 1);
      g_ienvelopes_744 = iEnvelopes(NULL, PERIOD_H1, 10, MODE_EMA, 1, PRICE_CLOSE, 0.2, MODE_LOWER, 1);
      g_ienvelopes_752 = iEnvelopes(NULL, PERIOD_H1, 10, MODE_EMA, 1, PRICE_CLOSE, 0.2, MODE_UPPER, 2);
      g_ienvelopes_760 = iEnvelopes(NULL, PERIOD_H1, 10, MODE_EMA, 1, PRICE_CLOSE, 0.2, MODE_LOWER, 2);
      g_ima_460 = iMA(NULL, PERIOD_H1, 40, 0, MODE_EMA, PRICE_CLOSE, 1);
      g_ima_468 = iMA(NULL, PERIOD_M15, 40, 0, MODE_EMA, PRICE_CLOSE, 1);
      g_ima_292 = iMA(NULL, PERIOD_M15, 320, 0, MODE_EMA, PRICE_CLOSE, 1);
      if (g_ienvelopes_728 > g_ima_1580 || g_ienvelopes_720 < g_ima_1580) {
         g_istochastic_348 = iStochastic(NULL, PERIOD_H1, 15, 5, 5, MODE_EMA, 1, MODE_MAIN, 1);
         g_istochastic_356 = iStochastic(NULL, PERIOD_H1, 15, 5, 5, MODE_EMA, 1, MODE_SIGNAL, 1);
         g_ienvelopes_768 = iEnvelopes(NULL, PERIOD_M15, 10, MODE_EMA, 1, PRICE_CLOSE, 0.1, MODE_UPPER, 1);
         g_ienvelopes_776 = iEnvelopes(NULL, PERIOD_M15, 10, MODE_EMA, 1, PRICE_CLOSE, 0.1, MODE_LOWER, 1);
         g_ienvelopes_784 = iEnvelopes(NULL, PERIOD_M15, 10, MODE_EMA, 1, PRICE_CLOSE, 0.1, MODE_UPPER, 2);
         g_ienvelopes_792 = iEnvelopes(NULL, PERIOD_M15, 10, MODE_EMA, 1, PRICE_CLOSE, 0.1, MODE_LOWER, 2);
         g_ima_468 = iMA(NULL, PERIOD_M15, 40, 0, MODE_EMA, PRICE_CLOSE, 1);
      } else {
         g_istochastic_348 = iStochastic(NULL, PERIOD_H1, 15, 5, 5, MODE_EMA, 1, MODE_MAIN, 1);
         g_istochastic_356 = iStochastic(NULL, PERIOD_H1, 15, 5, 5, MODE_EMA, 1, MODE_SIGNAL, 1);
         g_ienvelopes_768 = iEnvelopes(NULL, PERIOD_M15, 10, MODE_EMA, 1, PRICE_CLOSE, 0.1, MODE_UPPER, 1);
         g_ienvelopes_776 = iEnvelopes(NULL, PERIOD_M15, 10, MODE_EMA, 1, PRICE_CLOSE, 0.1, MODE_LOWER, 1);
         g_ienvelopes_784 = iEnvelopes(NULL, PERIOD_M15, 10, MODE_EMA, 1, PRICE_CLOSE, 0.1, MODE_UPPER, 2);
         g_ienvelopes_792 = iEnvelopes(NULL, PERIOD_M15, 10, MODE_EMA, 1, PRICE_CLOSE, 0.1, MODE_LOWER, 2);
         g_ima_468 = iMA(NULL, PERIOD_M15, 40, 0, MODE_EMA, PRICE_CLOSE, 1);
      }
      g_ima_1572 = iMA(NULL, PERIOD_M15, 80, 0, MODE_EMA, PRICE_TYPICAL, 1);
      g_ienvelopes_800 = iEnvelopes(NULL, PERIOD_H1, 40, MODE_EMA, 1, PRICE_CLOSE, 0.4, MODE_UPPER, 1);
      g_ienvelopes_808 = iEnvelopes(NULL, PERIOD_H1, 40, MODE_EMA, 1, PRICE_CLOSE, 0.4, MODE_LOWER, 1);
      g_ienvelopes_816 = iEnvelopes(NULL, PERIOD_H1, 20, MODE_EMA, 1, PRICE_CLOSE, 0.5, MODE_UPPER, 1);
      g_ienvelopes_824 = iEnvelopes(NULL, PERIOD_H1, 20, MODE_EMA, 1, PRICE_CLOSE, 0.5, MODE_LOWER, 1);
      g_ienvelopes_832 = iEnvelopes(NULL, PERIOD_M15, 20, MODE_EMA, 1, PRICE_CLOSE, 0.35, MODE_UPPER, 1);
      g_ienvelopes_840 = iEnvelopes(NULL, PERIOD_M15, 20, MODE_EMA, 1, PRICE_CLOSE, 0.35, MODE_LOWER, 1);
      g_ibands_300 = iBands(NULL, PERIOD_H1, 40, 2, 0, PRICE_CLOSE, MODE_UPPER, 1);
      g_ibands_308 = iBands(NULL, PERIOD_H1, 40, 2, 0, PRICE_CLOSE, MODE_LOWER, 1);
      g_ibands_1516 = iBands(NULL, PERIOD_H1, 20, 2, 0, PRICE_CLOSE, MODE_UPPER, 1);
      g_ibands_1524 = iBands(NULL, PERIOD_H1, 20, 2, 0, PRICE_CLOSE, MODE_LOWER, 1);
      g_ibands_332 = iBands(NULL, PERIOD_H1, 20, 2, 0, PRICE_CLOSE, MODE_UPPER, 2);
      g_ibands_340 = iBands(NULL, PERIOD_H1, 20, 2, 0, PRICE_CLOSE, MODE_LOWER, 2);
      g_ibands_1532 = iBands(NULL, PERIOD_H1, 20, 2, 0, PRICE_CLOSE, MODE_UPPER, 2);
      g_ibands_1540 = iBands(NULL, PERIOD_H1, 20, 2, 0, PRICE_CLOSE, MODE_LOWER, 2);
      gd_316 = (g_ibands_300 + g_ibands_308) / 2.0;
      g_price_396 = High[iHighest(NULL, PERIOD_H1, MODE_HIGH, 8, 0)];
      g_price_404 = Low[iLowest(NULL, PERIOD_H1, MODE_LOW, 8, 0)];
      Modify(g_iatr_1040);
   }
   g_symbol_1788 = Symbol();
   g_point_1800 = MarketInfo(g_symbol_1788, MODE_POINT);
   g_digits_1796 = MarketInfo(g_symbol_1788, MODE_DIGITS);
   if (g_point_1800 == 0.00001) g_point_1800 = 0.0001;
   else
      if (g_point_1800 == 0.001) g_point_1800 = 0.01;
   double ld_88 = 1;
   if (MarketInfo(Symbol(), MODE_DIGITS) == 5.0) ld_88 = 10;
   if (MarketInfo(Symbol(), MODE_DIGITS) == 4.0) ld_88 = 1;
   g_iatr_1040 = iATR(NULL, PERIOD_D1, 14, 1);
   gd_1888 = g_iatr_1040 / 2.0 / ld_88 / Point;
   if (gd_1888 < 70.0) gd_1888 = 70;
   gd_1948 = gd_1888 / 2.0;
   gd_1824 = 2.0 * g_iatr_1040 / ld_88 / Point;
   gd_1832 = gd_1824 / 2.0;
   gi_unused_1560 = FALSE;
   totalorders();
   if (gd_2504 > 1.0 && gs_2060 == "") fillvariables();
   else
      if (gd_2504 == 0.0 && gs_2060 != "") gs_2060 = "";
   g_ask_2148 = Ask;
   g_bid_2140 = Bid;
   double ld_96 = (g_ask_2148 + g_bid_2140) / 2.0;
   if (gs_2060 != "") MoveSL(10.0 * gd_1832, 0);
   if (g_bars_2076 != Bars) {
      g_bars_2076 = Bars;
      gs_true_2292 = "True";
   }
   g_iatr_1040 = iATR(NULL, PERIOD_H1, 14, 1);
   double l_iatr_112 = iATR(NULL, PERIOD_H1, 3, 1);
   g_ilow_220 = iLow(NULL, PERIOD_H1, 1);
   g_ihigh_228 = iHigh(NULL, PERIOD_H1, 1);
   g_iopen_236 = iOpen(NULL, PERIOD_H1, 1);
   g_iclose_244 = iClose(NULL, PERIOD_H1, 1);
   g_iopen_252 = iOpen(NULL, PERIOD_M15, 1);
   g_iclose_260 = iClose(NULL, PERIOD_M15, 1);
   g_ilow_268 = iLow(NULL, PERIOD_M15, 1);
   g_ihigh_276 = iHigh(NULL, PERIOD_M15, 1);
   int li_0 = WTrend(gd_284, gi_532, g_ienvelopes_728, g_ienvelopes_720, g_ima_1580);
   int li_4 = TCall(gd_284, gi_532, 101, g_ienvelopes_744, g_ienvelopes_760, g_ienvelopes_776, g_ienvelopes_736, g_ienvelopes_752, g_ienvelopes_768, g_ienvelopes_784, g_ienvelopes_808, g_ienvelopes_800, g_ienvelopes_792, g_ibands_1524, g_ibands_1516, g_ilow_220, g_ihigh_228, g_iopen_236, g_iclose_244, g_iopen_252, g_iclose_260, g_ima_460, g_ibands_300, g_ibands_308, g_istochastic_348, g_istochastic_356);
   int li_8 = TCall(gd_284, gi_532, 111, g_ienvelopes_744, g_ienvelopes_760, g_ienvelopes_776, g_ienvelopes_736, g_ienvelopes_752, g_ienvelopes_768, g_ienvelopes_784, g_ienvelopes_808, g_ienvelopes_800, g_ienvelopes_792, g_ibands_1524, g_ibands_1516, g_ilow_220, g_ihigh_228, g_iopen_236, g_iclose_244, g_iopen_252, g_iclose_260, g_ima_460, g_ibands_300, g_ibands_308, g_istochastic_348, g_istochastic_356);
   int li_12 = TCall(gd_284, gi_532, 102, g_ienvelopes_744, g_ienvelopes_760, g_ienvelopes_776, g_ienvelopes_736, g_ienvelopes_752, g_ienvelopes_768, g_ienvelopes_784, g_ienvelopes_808, g_ienvelopes_800, g_ienvelopes_792, g_ibands_1524, g_ibands_1516, g_ilow_220, g_ihigh_228, g_iopen_236, g_iclose_244, g_iopen_252, g_iclose_260, g_ima_460, g_ibands_300, g_ibands_308, g_istochastic_348, g_istochastic_356);
   int li_16 = TCall(gd_284, gi_532, 112, g_ienvelopes_744, g_ienvelopes_760, g_ienvelopes_776, g_ienvelopes_736, g_ienvelopes_752, g_ienvelopes_768, g_ienvelopes_784, g_ienvelopes_808, g_ienvelopes_800, g_ienvelopes_792, g_ibands_1524, g_ibands_1516, g_ilow_220, g_ihigh_228, g_iopen_236, g_iclose_244, g_iopen_252, g_iclose_260, g_ima_460, g_ibands_300, g_ibands_308, g_istochastic_348, g_istochastic_356);
   int li_20 = TCall(gd_284, gi_532, 201, g_ienvelopes_744, g_ienvelopes_760, g_ienvelopes_776, g_ienvelopes_736, g_ienvelopes_752, g_ienvelopes_768, g_ienvelopes_784, g_ienvelopes_808, g_ienvelopes_800, g_ienvelopes_792, g_ibands_1524, g_ibands_1516, g_ilow_220, g_ihigh_228, g_iopen_236, g_iclose_244, g_iopen_252, g_iclose_260, g_ima_460, g_ibands_300, g_ibands_308, g_istochastic_348, g_istochastic_356);
   int li_24 = TCall(gd_284, gi_532, 211, g_ienvelopes_744, g_ienvelopes_760, g_ienvelopes_776, g_ienvelopes_736, g_ienvelopes_752, g_ienvelopes_768, g_ienvelopes_784, g_ienvelopes_808, g_ienvelopes_800, g_ienvelopes_792, g_ibands_1524, g_ibands_1516, g_ilow_220, g_ihigh_228, g_iopen_236, g_iclose_244, g_iopen_252, g_iclose_260, g_ima_460, g_ibands_300, g_ibands_308, g_istochastic_348, g_istochastic_356);
   int li_28 = TCall(gd_284, gi_532, 202, g_ienvelopes_744, g_ienvelopes_760, g_ienvelopes_776, g_ienvelopes_736, g_ienvelopes_752, g_ienvelopes_768, g_ienvelopes_784, g_ienvelopes_808, g_ienvelopes_800, g_ienvelopes_792, g_ibands_1524, g_ibands_1516, g_ilow_220, g_ihigh_228, g_iopen_236, g_iclose_244, g_iopen_252, g_iclose_260, g_ima_460, g_ibands_300, g_ibands_308, g_istochastic_348, g_istochastic_356);
   int li_32 = TCall(gd_284, gi_532, 212, g_ienvelopes_744, g_ienvelopes_760, g_ienvelopes_776, g_ienvelopes_736, g_ienvelopes_752, g_ienvelopes_768, g_ienvelopes_784, g_ienvelopes_808, g_ienvelopes_800, g_ienvelopes_792, g_ibands_1524, g_ibands_1516, g_ilow_220, g_ihigh_228, g_iopen_236, g_iclose_244, g_iopen_252, g_iclose_260, g_ima_460, g_ibands_300, g_ibands_308, g_istochastic_348, g_istochastic_356);
   if (gs_2060 == "SELLTRADE" && Close[1] > gd_316 && g_ima_460 > gd_316) {
   }
   if (gs_2060 == "BUYTRADE" && Close[1] < gd_316 && g_ima_460 < gd_316) {
   }
   g_iatr_1040 = iATR(NULL, PERIOD_D1, 14, 1);
   if (g_iatr_212 < 0.026) {
      g_istochastic_348 = iStochastic(NULL, PERIOD_W1, 5, 3, 3, MODE_EMA, 1, MODE_MAIN, 1);
      g_istochastic_356 = iStochastic(NULL, PERIOD_W1, 5, 3, 3, MODE_EMA, 1, MODE_SIGNAL, 1);
      g_istochastic_364 = iStochastic(NULL, PERIOD_H1, 15, 9, 9, MODE_EMA, 1, MODE_MAIN, 1);
      g_istochastic_372 = iStochastic(NULL, PERIOD_H1, 15, 9, 9, MODE_EMA, 1, MODE_SIGNAL, 1);
      if (gs_true_2292 == "True" && g_ienvelopes_824 < g_ibands_1540 && g_ienvelopes_816 > g_ibands_1532 && g_ilow_220 < g_ienvelopes_824 && g_iclose_244 > g_ienvelopes_824 &&
         g_istochastic_348 > g_istochastic_356 && g_istochastic_364 > g_istochastic_372 && g_istochastic_372 < 80.0) {
         if (gs_2060 == "") {
            QBUY3();
            Modify2(g_iatr_1040);
         } else {
            if (gs_2060 == "SELLTRADE") {
               Closeorder();
               QBUY3();
               Modify2(g_iatr_1040);
            }
         }
      }
      if (gs_true_2292 == "True" && g_ienvelopes_824 < g_ibands_1540 && g_ienvelopes_816 > g_ibands_1532 && g_ihigh_228 > g_ienvelopes_816 && g_iclose_244 < g_ienvelopes_816 &&
         g_istochastic_348 < g_istochastic_356 && g_istochastic_364 < g_istochastic_372 && g_istochastic_372 > 20.0) {
         if (gs_2060 == "") {
            QSELL3();
            Modify2(g_iatr_1040);
         } else {
            if (gs_2060 == "BUYTRADE") {
               Closeorder();
               QSELL3();
               Modify2(g_iatr_1040);
            }
         }
      }
      if (g_ienvelopes_728 > g_ima_1580 || g_ienvelopes_720 < g_ima_1580) {
         if (gs_true_2292 == "True" && g_ienvelopes_744 > g_ima_460 && g_ienvelopes_760 <= g_ima_460 && g_istochastic_348 > g_istochastic_356 && g_istochastic_364 > g_istochastic_372 &&
            g_istochastic_372 < 80.0) {
            if (gs_2060 == "") QBUY3();
            else {
               if (gs_2060 == "SELLTRADE") {
                  Closeorder();
                  QBUY3();
               }
            }
         }
         if (gs_true_2292 == "True" && g_ienvelopes_736 < g_ima_460 && g_ienvelopes_752 >= g_ima_460 && g_istochastic_348 < g_istochastic_356 && g_istochastic_364 < g_istochastic_372 &&
            g_istochastic_372 > 20.0) {
            if (gs_2060 == "") QSELL3();
            else {
               if (gs_2060 == "BUYTRADE") {
                  Closeorder();
                  QSELL3();
               }
            }
         }
         if (gs_true_2292 == "True" && g_ienvelopes_744 > g_ima_460 && g_ienvelopes_776 > g_ima_468 && g_ienvelopes_792 <= g_ima_468 && g_istochastic_348 > g_istochastic_356 &&
            g_istochastic_364 > g_istochastic_372 && g_istochastic_372 < 80.0) {
            if (gs_2060 == "") QBUY3();
            else {
               if (gs_2060 == "SELLTRADE") {
                  Closeorder();
                  QBUY3();
               }
            }
         }
         if (gs_true_2292 == "True" && g_ienvelopes_736 < g_ima_460 && g_ienvelopes_768 < g_ima_468 && g_ienvelopes_784 >= g_ima_468 && g_istochastic_348 < g_istochastic_356 &&
            g_istochastic_364 < g_istochastic_372 && g_istochastic_372 > 20.0) {
            if (gs_2060 == "") QSELL3();
            else {
               if (gs_2060 == "BUYTRADE") {
                  Closeorder();
                  QSELL3();
               }
            }
         }
      } else {
         if (gs_true_2292 == "True" && g_ienvelopes_776 < g_ibands_308 && g_ienvelopes_768 > g_ibands_308 && Open[1] < Close[1] && g_istochastic_348 > g_istochastic_356 && g_istochastic_364 > g_istochastic_372 &&
            g_istochastic_372 < 80.0) {
            if (gs_2060 == "") QBUY3();
            else {
               if (gs_2060 == "SELLTRADE") {
                  Closeorder();
                  QBUY3();
               }
            }
         }
         if (gs_true_2292 == "True" && g_ienvelopes_768 < g_ibands_300 && g_ienvelopes_768 > g_ibands_300 && Open[1] > Close[1] && g_istochastic_348 < g_istochastic_356 && g_istochastic_364 < g_istochastic_372 &&
            g_istochastic_372 > 20.0) {
            if (gs_2060 == "") QSELL3();
            else {
               if (gs_2060 == "BUYTRADE") {
                  Closeorder();
                  QSELL3();
               }
            }
         }
         if (gs_true_2292 == "True" && g_ienvelopes_776 > g_ima_468 && g_ienvelopes_792 <= g_ima_468 && g_istochastic_348 > g_istochastic_356 && g_istochastic_348 < g_istochastic_356 &&
            g_istochastic_364 > g_istochastic_372 && g_istochastic_372 < 80.0) {
            if (gs_2060 == "") QBUY3();
            else {
               if (gs_2060 == "SELLTRADE") {
                  Closeorder();
                  QBUY3();
               }
            }
         }
         if (gs_true_2292 == "True" && g_ienvelopes_768 < g_ima_468 && g_ienvelopes_784 >= g_ima_468 && g_istochastic_348 < g_istochastic_356 && g_istochastic_364 < g_istochastic_372 &&
            g_istochastic_372 > 20.0) {
            if (gs_2060 == "") QSELL3();
            else {
               if (gs_2060 == "BUYTRADE") {
                  Closeorder();
                  QSELL3();
               }
            }
         }
      }
   } else {
      if (li_0 == 1) {
         if (gs_true_2292 == "True" && li_4 == 1) {
            if (gs_2060 == "") QBUY3();
            else {
               if (gs_2060 == "SELLTRADE") {
                  Closeorder();
                  QBUY3();
               }
            }
         }
         if (gs_true_2292 == "True" && li_8 == 1) {
            if (gs_2060 == "") QSELL3();
            else {
               if (gs_2060 == "BUYTRADE") {
                  Closeorder();
                  QSELL3();
               }
            }
         }
         if (gs_true_2292 == "True" && li_12 == 1) {
            if (gs_2060 == "") QBUY3();
            else {
               if (gs_2060 == "SELLTRADE") {
                  Closeorder();
                  QBUY3();
               }
            }
         }
         if (gs_true_2292 == "True" && li_16 == 1) {
            if (gs_2060 == "") QSELL3();
            else {
               if (gs_2060 == "BUYTRADE") {
                  Closeorder();
                  QSELL3();
               }
            }
         }
         if (gs_true_2292 == "True" && g_ienvelopes_776 > g_ima_468 && g_ienvelopes_792 <= g_ima_468 && g_ienvelopes_840 > g_ima_1572 || g_ienvelopes_832 < g_ima_1572 || (g_ienvelopes_840 < g_ima_1572 &&
            g_ienvelopes_832 > g_ima_1572 && g_iclose_260 < g_ima_1572)) {
            if (gs_2060 == "") QBUY3();
            else {
               if (gs_2060 == "SELLTRADE") {
                  Closeorder();
                  QBUY3();
               }
            }
         }
         if (gs_true_2292 == "True" && g_ienvelopes_768 < g_ima_468 && g_ienvelopes_784 >= g_ima_468 && g_ienvelopes_840 > g_ima_1572 || g_ienvelopes_832 < g_ima_1572 || (g_ienvelopes_840 < g_ima_1572 &&
            g_ienvelopes_832 > g_ima_1572 && g_iclose_260 > g_ima_1572)) {
            if (gs_2060 == "") QSELL3();
            else {
               if (gs_2060 == "BUYTRADE") {
                  Closeorder();
                  QSELL3();
               }
            }
         }
      } else {
         if (li_0 == 0) {
            if (gs_true_2292 == "True" && li_20 == 1 && iClose(NULL, PERIOD_H1, 1) > iLow(NULL, PERIOD_W1, 1)) {
               if (gs_2060 == "") QBUY3();
               else {
                  if (gs_2060 == "SELLTRADE") {
                     Closeorder();
                     QBUY3();
                  }
               }
            }
            if (gs_true_2292 == "True" && li_24 == 1 && iClose(NULL, PERIOD_H1, 1) < iHigh(NULL, PERIOD_W1, 1)) {
               if (gs_2060 == "") QSELL3();
               else {
                  if (gs_2060 == "BUYTRADE") {
                     Closeorder();
                     QSELL3();
                  }
               }
            }
            if (gs_true_2292 == "True" && li_28 == 1 && iClose(NULL, PERIOD_H1, 1) > iLow(NULL, PERIOD_W1, 1)) {
               if (gs_2060 == "") QBUY3();
               else {
                  if (gs_2060 == "SELLTRADE") {
                     Closeorder();
                     QBUY3();
                  }
               }
            }
            if (gs_true_2292 == "True" && li_32 == 1 && iClose(NULL, PERIOD_H1, 1) < iHigh(NULL, PERIOD_W1, 1)) {
               if (gs_2060 == "") QSELL3();
               else {
                  if (gs_2060 == "BUYTRADE") {
                     Closeorder();
                     QSELL3();
                  }
               }
            }
            if (gs_true_2292 == "True" && g_ienvelopes_776 > g_ima_468 && g_ienvelopes_792 <= g_ima_468 && iClose(NULL, PERIOD_H1, 1) > iHigh(NULL, PERIOD_W1, 1)) {
               if (gs_2060 == "") QBUY3();
               else {
                  if (gs_2060 == "SELLTRADE") {
                     Closeorder();
                     QBUY3();
                  }
               }
            }
            if (gs_true_2292 == "True" && g_ienvelopes_768 < g_ima_468 && g_ienvelopes_784 >= g_ima_468 && iClose(NULL, PERIOD_H1, 1) < iLow(NULL, PERIOD_W1, 1)) {
               if (gs_2060 == "") QSELL3();
               else {
                  if (gs_2060 == "BUYTRADE") {
                     Closeorder();
                     QSELL3();
                  }
               }
            }
         } else {
            if (li_0 == 9 || gi_1548 == 1111) {
               ObjectsDeleteAll(0, OBJ_LABEL);
               ObjectCreate("Title", OBJ_LABEL, 0, 0, 0);
               ObjectCreate("Status", OBJ_LABEL, 0, 0, 0);
               ObjectSet("Title", OBJPROP_CORNER, 0);
               ObjectSet("Title", OBJPROP_XDISTANCE, 50);
               ObjectSet("Title", OBJPROP_YDISTANCE, 50);
               ObjectSet("Status", OBJPROP_CORNER, 0);
               ObjectSet("Status", OBJPROP_XDISTANCE, 50);
               ObjectSet("Status", OBJPROP_YDISTANCE, 70);
               ObjectSetText("Title", "ParaSwing - Real Account Key Failed", 14, "Arial", Red);
               ObjectSetText("Status", "Please enter the Correct Real Account Key", 14, "Arial", Red);
               return;
            }
         }
      }
   }
   if (Seconds() == 0 || gi_1556 == 0) {
      gi_1556++;
      ObjectsDeleteAll(0, OBJ_LABEL);
      ObjectCreate("Title", OBJ_LABEL, 0, 0, 0);
      ObjectCreate("Validation", OBJ_LABEL, 0, 0, 0);
      ObjectCreate("StopLoss", OBJ_LABEL, 0, 0, 0);
      ObjectCreate("TargetPrice", OBJ_LABEL, 0, 0, 0);
      ObjectCreate("TrailingSLTrigger", OBJ_LABEL, 0, 0, 0);
      ObjectCreate("MagicNumber", OBJ_LABEL, 0, 0, 0);
      ObjectCreate("Status", OBJ_LABEL, 0, 0, 0);
      ObjectCreate("OpenTrade", OBJ_LABEL, 0, 0, 0);
      ObjectCreate("PriceAction", OBJ_LABEL, 0, 0, 0);
      ObjectSet("Title", OBJPROP_CORNER, 0);
      ObjectSet("Title", OBJPROP_XDISTANCE, 10);
      ObjectSet("Title", OBJPROP_YDISTANCE, 20);
      ObjectSet("Validation", OBJPROP_CORNER, 0);
      ObjectSet("Validation", OBJPROP_XDISTANCE, 10);
      ObjectSet("Validation", OBJPROP_YDISTANCE, 40);
      ObjectSet("StopLoss", OBJPROP_CORNER, 0);
      ObjectSet("StopLoss", OBJPROP_XDISTANCE, 10);
      ObjectSet("StopLoss", OBJPROP_YDISTANCE, 60);
      ObjectSet("TargetPrice", OBJPROP_CORNER, 0);
      ObjectSet("TargetPrice", OBJPROP_XDISTANCE, 10);
      ObjectSet("TargetPrice", OBJPROP_YDISTANCE, 75);
      ObjectSet("TrailingSLTrigger", OBJPROP_CORNER, 0);
      ObjectSet("TrailingSLTrigger", OBJPROP_XDISTANCE, 10);
      ObjectSet("TrailingSLTrigger", OBJPROP_YDISTANCE, 90);
      ObjectSet("MagicNumber", OBJPROP_CORNER, 0);
      ObjectSet("MagicNumber", OBJPROP_XDISTANCE, 10);
      ObjectSet("MagicNumber", OBJPROP_YDISTANCE, 105);
      ObjectSet("Status", OBJPROP_CORNER, 0);
      ObjectSet("Status", OBJPROP_XDISTANCE, 10);
      ObjectSet("Status", OBJPROP_YDISTANCE, 120);
      ObjectSet("OpenTrade", OBJPROP_CORNER, 0);
      ObjectSet("OpenTrade", OBJPROP_XDISTANCE, 10);
      ObjectSet("OpenTrade", OBJPROP_YDISTANCE, 135);
      ObjectSet("PriceAction", OBJPROP_CORNER, 0);
      ObjectSet("PriceAction", OBJPROP_XDISTANCE, 10);
      ObjectSet("PriceAction", OBJPROP_YDISTANCE, 150);
      ObjectSetText("Title", WindowExpertName(), 12, "Arial", White);
      ObjectSetText("Validation", WindowExpertName() + " License : Okay", 12, "Arial", Lime);
      ObjectSetText("StopLoss", "StopLoss : " + DoubleToStr(gd_1888, 0) + " Pips", 10, "Arial", White);
      ObjectSetText("TargetPrice", "Target Price : " + DoubleToStr(gd_1824, 0) + " Pips", 10, "Arial", White);
      ObjectSetText("TrailingSLTrigger", "Trailing SL Triggers at Gain of : " + DoubleToStr(gd_1948, 0) + " Pips", 10, "Arial", White);
      ObjectSetText("MagicNumber", "MagicNumber : " + gi_476, 10, "Arial", White);
      g_symbol_1788 = Symbol();
      gd_1996 = gd_1976 / 40.0;
      gd_2004 = MoneyManagement(g_symbol_1788, gd_1996);
      ObjectSetText("PriceAction", "Lot Size for Next Trade : " + DoubleToStr(gd_2004, 0), 10, "Arial", White);
      ObjectSetText("Status", "", 12, "Arial", White);
      if (gs_2060 == "") ObjectSetText("OpenTrade", "None", 10, "Arial", White);
      if (gs_2060 == "") ObjectSetText("Status", "Waiting for next trade", 10, "Arial", White);
      if (gs_2060 != "") ObjectSetText("Status", "ParaSwing Trade Open", 10, "Arial", White);
      if (gs_2060 == "BUYTRADE") ObjectSetText("OpenTrade", "BUY " + Symbol(), 10, "Arial", White);
      if (gs_2060 == "SELLTRADE") ObjectSetText("OpenTrade", "SELL " + Symbol(), 10, "Arial", White);
   }
}

void start() {
   /*
   int lia_0[1];
   string ls_4;
   string ls_12;
   string ls_20;
   if (Seconds() == 0 && Minute() == 0 && Hour() == 0 && gs_2060 == "2222") {
      gd_284 = ValidateAccount(gi_532);
      Print(DoubleToStr(gd_284, 0) + "  IsDemo  " + IsDemo());
      Print("Please Wait..... Validating ClickBank Order Number");
      ls_4 = httpGET("http://paraswing.com/keycheck1.php?serial=" + gs_1848, lia_0);
      if (lia_0[0] == 200) {
         if (ls_4 == "9999") gi_1552 = 9999;
         if (ls_4 == "1111") gi_1552 = 1000;
         Print("Initialization Complete." + gi_1552);
      } else {
         Print("Server Validation Check failed. Temporary permission granted");
         gi_1552 = 9999;
      }
      if (IsDemo() == FALSE) {
         Print("Please Wait..... Validating Account Number");
         ls_12 = httpGET("http://paraswing.com/keycheck2.php?Seed=" + DoubleToStr(gd_284, 0), lia_0);
         if (lia_0[0] == 200) {
            if (ls_12 == "9999") gi_1548 = 9999;
            if (ls_12 == "1111") gi_1548 = 1111;
            Print("Initialization Complete." + gi_1548);
         } else {
            Print("Server Validation Check failed. Temporary permission granted");
            gi_1548 = 9999;
         }
      } else {
         Print("Please Wait..... Validating Account Number");
         ls_20 = httpGET("http://paraswing.com/keycheck3.php?Seed=" + DoubleToStr(gd_284, 0), lia_0);
         if (lia_0[0] == 200) {
            if (ls_20 == "9999") gi_1548 = 9999;
            if (ls_20 == "1111") gi_1548 = 1111;
            Print("Initialization Complete." + gi_1548);
         } else {
            Print("Server Validation Check failed. Temporary permission granted");
            gi_1548 = 9999;
         }
      }
   }
   if (gi_1552 == 1000) {
      ObjectsDeleteAll(0, OBJ_LABEL);
      ObjectCreate("Title", OBJ_LABEL, 0, 0, 0);
      ObjectCreate("Status", OBJ_LABEL, 0, 0, 0);
      ObjectSet("Title", OBJPROP_CORNER, 0);
      ObjectSet("Title", OBJPROP_XDISTANCE, 50);
      ObjectSet("Title", OBJPROP_YDISTANCE, 50);
      ObjectSet("Status", OBJPROP_CORNER, 0);
      ObjectSet("Status", OBJPROP_XDISTANCE, 50);
      ObjectSet("Status", OBJPROP_YDISTANCE, 70);
      ObjectCreate("Status2", OBJ_LABEL, 0, 0, 0);
      ObjectSet("Status2", OBJPROP_CORNER, 0);
      ObjectSet("Status2", OBJPROP_XDISTANCE, 50);
      ObjectSet("Status2", OBJPROP_YDISTANCE, 90);
      ObjectSetText("Title", "ParaSwing - ClickBank Order Number Invalid", 14, "Arial", Red);
      ObjectSetText("Status", "Please Enter Your ClickBank Order Number", 14, "Arial", Red);
      ObjectSetText("Status2", "or contact support@paraswing.com", 14, "Arial", Red);
      return;
   }
   if (gi_1548 == 1111) {
      ObjectsDeleteAll(0, OBJ_LABEL);
      ObjectCreate("Title", OBJ_LABEL, 0, 0, 0);
      ObjectCreate("Status", OBJ_LABEL, 0, 0, 0);
      ObjectSet("Title", OBJPROP_CORNER, 0);
      ObjectSet("Title", OBJPROP_XDISTANCE, 50);
      ObjectSet("Title", OBJPROP_YDISTANCE, 50);
      ObjectSet("Status", OBJPROP_CORNER, 0);
      ObjectSet("Status", OBJPROP_XDISTANCE, 50);
      ObjectSet("Status", OBJPROP_YDISTANCE, 70);
      ObjectCreate("Status2", OBJ_LABEL, 0, 0, 0);
      ObjectSet("Status2", OBJPROP_CORNER, 0);
      ObjectSet("Status2", OBJPROP_XDISTANCE, 50);
      ObjectSet("Status2", OBJPROP_YDISTANCE, 90);
      ObjectSetText("Title", "ParaSwing - Real Account Key Failed", 14, "Arial", Red);
      ObjectSetText("Status", "Please enter the Correct Real Account Key", 14, "Arial", Red);
      ObjectSetText("Status2", "or contact support@paraswing.com", 14, "Arial", Red);
      return;
   }
   */
   gi_1552 = 9999;
   gi_1548 = 9999;
   CheckForOpen();
}

void init() {
   int lia_0[1];
   int l_str_len_28;
   double l_str2dbl_32;
   double l_acc_number_40;
//   gs_1848 = ClickBank_Order_Number;
   gi_1856 = MT4_Account_Key;
   gd_1824 = gd_1872;
   gd_1832 = gd_1880;
   gi_480 = EA_MagicNumber;
   gd_500 = Percentage_Free_Margin;
   gd_508 = Trade_With_Fixed_LotSize;
   gs_1840 = EA_Name;
   gi_532 = gi_1856;
   gi_476 = gi_480;
   gd_484 = gd_500;
   gd_492 = gd_508;
   gd_284 = ValidateAccount(gi_532);
   /*
   Print("Please Wait..... Validating ClickBank Order Number");
   string ls_4 = httpGET("http://paraswing.com/keycheck1.php?serial=" + gs_1848, lia_0);
   if (lia_0[0] == 200) {
      if (ls_4 == "9999") gi_1552 = 9999;
      if (ls_4 == "1111") gi_1552 = 1000;
      Print("Initialization Complete.");
   } else {
      Print("Server Validation Check failed. Temporary permission granted");
      gi_1552 = 9999;
   }
   string ls_12 = gs_1848;
   string ls_20 = StringSubstr(ls_12, 0, 2);
   if (ls_20 == "RC" && gi_1552 == 9999) {
      l_str_len_28 = StringLen(ls_12);
      ls_20 = StringSubstr(ls_12, 2, l_str_len_28);
      l_str2dbl_32 = StrToDouble(ls_20);
      l_acc_number_40 = AccountNumber();
      if (l_str2dbl_32 != l_acc_number_40) gi_1548 = 1111;
      else {
         Print("Review Copy - Validated");
         gi_1548 = 9999;
      }
   }
   */
   gi_1552 = 9999;
   gi_1548 = 9999;
   
   
   gi_unused_536 = gi_704;
   gd_unused_1808 = gd_1832;
   gd_unused_1816 = gd_688;
   if (gd_484 < 1.0) gd_484 = 1;
   if (gd_484 > 50.0) gd_484 = 50;
   if (gd_1976 < 10.0) gd_1976 = 10;
   if (gd_1976 > 500.0) gd_1976 = 500;
   if (gi_476 < 1 || gi_476 > 2147483640) gi_476 = 99999999;
   if (gd_492 < 0.0) gd_492 = 0.0;
   if (gd_664 < 0.0) gd_664 = 0;
   if (gd_1888 < 5.0) gd_1888 = 200;
   if (gd_1824 < 5.0) gd_1824 = 300;
   if (gd_1832 < 5.0) gd_1832 = 90;
   gd_unused_696 = 30;
   gd_688 = 30;
}

void deinit() {
}