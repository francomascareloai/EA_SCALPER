/*
   Generated by EX4-TO-MQ4 decompiler V4.0.438.4 [-]
   Website: https://purebeam.biz
   E-mail : purebeam@gmail.com
*/
#property copyright "Copyright © 2012, Choices2Rich.Com"
#property link      "www.choices2rich.com"

#property indicator_chart_window
#property indicator_minimum 0.0
#property indicator_buffers 5
#property indicator_color1 Red
#property indicator_color2 BurlyWood
#property indicator_color3 Red
#property indicator_color4 BurlyWood
#property indicator_color5 BurlyWood

int gi_76 = 7;
int gi_80 = 50;
double gd_84 = 1.1;
bool gi_92 = TRUE;
double gd_96 = 0.5;
string gs_104;
double gda_112[];
double gda_116[];
double gda_120[];
double gda_124[];
double gda_128[];

int init() {
   SetIndexBuffer(0, gda_112);
   SetIndexBuffer(1, gda_116);
   SetIndexBuffer(2, gda_120);
   ArrayResize(gda_124, Bars);
   ArrayInitialize(gda_124, 0.0);
   SetIndexBuffer(4, gda_128);
   f0_2();
   return (0);
}

int deinit() {
   f0_0();
   return (0);
}

int start() {
   double ld_20;
   double ld_28;
   double ld_36;
   double ld_44;
   double ld_52;
   double ld_60;
   string ls_68;
   double ld_0 = 0;
   int li_8 = IndicatorCounted();
   int li_12 = Bars - li_8;
   if (li_12 > gi_80 + 5) li_12 -= gi_80;
   for (int li_16 = li_12; li_16 >= 0; li_16--) {
      ld_20 = iATR(NULL, 0, gi_76, li_16);
      ld_28 = gda_124[li_16 + 1];
      ld_36 = gda_124[li_16 + 3];
      ld_44 = NormalizeDouble(ld_20, Digits);
      if (gi_92) ld_0 = ld_20 / iATR(NULL, 0, gi_80, li_16) + gd_96 * (ld_28 - ld_36);
      else ld_0 = ld_20 / iATR(NULL, 0, gi_80, li_16);
      ld_52 = iStdDev(NULL, 0, gi_76, 0, MODE_LWMA, PRICE_TYPICAL, li_16);
      ld_52 /= iStdDev(NULL, 0, gi_80, 0, MODE_LWMA, PRICE_TYPICAL, li_16);
      ld_60 = gd_84;
      ld_60 -= ld_52;
      ls_68 = "";
      if (gda_120[li_16] > gda_120[li_16 + 1]) ls_68 = "(S)";
      else {
         if (gda_120[li_16] < gda_120[li_16 + 1]) ls_68 = "(W)";
         else ls_68 = "";
      }
      if (ld_0 >= ld_60) {
         gda_120[li_16] = ld_0;
         gda_116[li_16] = ld_0;
         if (ls_68 == "(S)") gda_128[li_16] = 1;
         else gda_128[li_16] = 0;
         gs_104 = "SCALPING TIME " + ls_68;
      } else {
         gda_120[li_16] = ld_0;
         gda_116[li_16] = 0;
         gda_128[li_16] = 0;
         gs_104 = "NO SCALPING TIME";
      }
      gda_124[li_16] = ld_0;
      gda_112[li_16] = ld_60;
   }
   f0_2();
   return (0);
}

void f0_2() {
   f0_1("title", 5, 3, "@ScalpTime", 12, "Impact", Orange);
   f0_1("label", 5, 18, gs_104, 8, "Arial", Silver);
   WindowRedraw();
}

void f0_1(string as_0, int ai_8, int ai_12, string as_16 = "", int ai_24 = 42, string as_28 = "Arial", color ai_36 = -1) {
   ObjectCreate(as_0, OBJ_LABEL, 0, 0, 0);
   ObjectSet(as_0, OBJPROP_CORNER, 3);
   ObjectSet(as_0, OBJPROP_COLOR, ai_36);
   ObjectSet(as_0, OBJPROP_XDISTANCE, ai_8);
   ObjectSet(as_0, OBJPROP_YDISTANCE, ai_12);
   ObjectSetText(as_0, as_16, ai_24, as_28, ai_36);
}

void f0_0() {
   ObjectSet("title", OBJPROP_COLOR, CLR_NONE);
   ObjectSet("label", OBJPROP_COLOR, CLR_NONE);
}
