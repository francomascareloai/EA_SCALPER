/*
   Generated by EX4-TO-MQ4 decompiler V1.0.224.1 []
   Website: http://cafetrader.info
   E-mail : ladangdollar@gmail.com
*/
#property copyright "@2012  by Ninjaa Trader "
#property link      "ladangdollar@gmail.com"

extern bool use_daily_target = FALSE;
extern double daily_target = 500.0;
extern int StartHour = 0;
extern int EndHour = 6;
bool trade_in_fri = TRUE;
int magic = 30121980;
extern double start_lot = 0.10;
extern double range = 25.0;
extern int level = 2;
extern bool MM = true;
extern int risk = 3;
extern bool lot_multiplier = TRUE;
extern double multiplier = 1.70;
extern double increament = 0.12;
extern bool use_sl_and_tp = true;
extern double sl = 1000.0;
extern double tp = 10.0;
extern double tp_in_money = 6.0;
extern bool stealth_mode = TRUE;
extern bool use_bb = TRUE;
extern int bb_period = 20;
extern int bb_deviation = 2;
extern int bb_shift = 0;
extern bool use_stoch = false;
extern int k = 14;
extern int d = 7;
extern int slowing = 7;
extern int price_field = 0;
extern int stoch_shift = 0;
extern int lo_level = 30;
extern int up_level = 70;
extern bool use_rsi = false;
extern int rsi_period = 14;
extern int rsi_shift = 0;
extern int lower = 30;
extern int upper = 70;
double gd_252;
double g_minlot_260;
double g_stoplevel_268;
int gi_276 = 0;
int g_count_280 = 0;
int g_ticket_284 = 0;

extern string Expert_Comment = "EA Sarapan_Pagi";
int init() {
   if (Digits == 3 || Digits == 5) gd_252 = 10.0 * Point;
   else gd_252 = Point;
   g_minlot_260 = MarketInfo(Symbol(), MODE_MINLOT);
   g_stoplevel_268 = MarketInfo(Symbol(), MODE_STOPLEVEL);
   if (start_lot < g_minlot_260) Print("lotsize is to small.");
   if (sl < g_stoplevel_268) Print("stoploss is to tight.");
   if (tp < g_stoplevel_268) Print("takeprofit is to tight.");
   if (g_minlot_260 == 0.01) gi_276 = 2;
   if (g_minlot_260 == 0.1) gi_276 = 1;
   return (0);
}

int deinit() {
   return (0);
}

int start() {
   int l_cmd_4;
   double l_ord_open_price_8;
   double l_ord_lots_16;
   double l_ord_stoploss_24;
   double l_ord_takeprofit_32;
   if (MM) start_lot = NormalizeDouble(AccountBalance() * AccountLeverage() / 100000.0 * risk, 0) * MarketInfo(Symbol(), MODE_MINLOT);
   if (start_lot < MarketInfo(Symbol(), MODE_MINLOT)) {
      Comment("Not Enough Free Margin to begin");
      return (0);
   }
   if (TimeHour(TimeCurrent()) < StartHour || (TimeHour(TimeCurrent()) >= EndHour && total() == 0)) {
      Comment("\nBelum waktunya trading.");
      return (0);
   }
   if (use_daily_target && dailyprofit() >= daily_target) {
      Comment("\ndaily target achieved.");
      return (0);
   }
   if (!trade_in_fri && DayOfWeek() == 5 && total() == 0) {
      Comment("\nstop trading in Friday.");
      return (0);
   }
   if (total() == 0 && g_count_280 == 0) {
      if (signal() == -2) {
         if (stealth_mode) {
            if (use_sl_and_tp) g_ticket_284 = OrderSend(Symbol(), OP_BUY, start_lot, Ask, 3, Ask - sl * gd_252, Ask + tp * gd_252, "", magic, 0, Blue);
            else g_ticket_284 = OrderSend(Symbol(), OP_BUY, start_lot, Ask, 3, 0, 0, "", magic, 0, Blue);
         } else {
            if (use_sl_and_tp) {
               if (OrderSend(Symbol(), OP_BUY, start_lot, Ask, 3, Ask - sl * gd_252, Ask + tp * gd_252, "", magic, 0, Blue) > 0) {
                  for (int li_0 = 1; li_0 < level; li_0++) {
                     if (lot_multiplier) {
                        g_ticket_284 = OrderSend(Symbol(), OP_BUYLIMIT, NormalizeDouble(start_lot * MathPow(multiplier, li_0), gi_276), Ask - range * li_0 * gd_252, 3, Ask - range * li_0 * gd_252 - sl * gd_252, Ask - range * li_0 * gd_252 +
                           tp * gd_252, "", magic, 0, Blue);
                     } else {
                        g_ticket_284 = OrderSend(Symbol(), OP_BUYLIMIT, NormalizeDouble(start_lot + increament * li_0, gi_276), Ask - range * li_0 * gd_252, 3, Ask - range * li_0 * gd_252 - sl * gd_252, Ask - range * li_0 * gd_252 +
                           tp * gd_252, "", magic, 0, Blue);
                     }
                  }
               }
            } else {
               if (OrderSend(Symbol(), OP_BUY, start_lot, Ask, 3, 0, 0, "", magic, 0, Blue) > 0) {
                  for (li_0 = 1; li_0 < level; li_0++) {
                     if (lot_multiplier) g_ticket_284 = OrderSend(Symbol(), OP_BUYLIMIT, NormalizeDouble(start_lot * MathPow(multiplier, li_0), gi_276), Ask - range * li_0 * gd_252, 3, 0, 0, "", magic, 0, Blue);
                     else g_ticket_284 = OrderSend(Symbol(), OP_BUYLIMIT, NormalizeDouble(start_lot + increament * li_0, gi_276), Ask - range * li_0 * gd_252, 3, 0, 0, "", magic, 0, Blue);
                  }
               }
            }
         }
      }
      if (signal() == 2) {
         if (stealth_mode) {
            if (use_sl_and_tp) g_ticket_284 = OrderSend(Symbol(), OP_SELL, start_lot, Bid, 3, Bid + sl * gd_252, Bid - tp * gd_252, "", magic, 0, Red);
            else g_ticket_284 = OrderSend(Symbol(), OP_SELL, start_lot, Bid, 3, 0, 0, "", magic, 0, Red);
         } else {
            if (use_sl_and_tp) {
               if (OrderSend(Symbol(), OP_SELL, start_lot, Bid, 3, Bid + sl * gd_252, Bid - tp * gd_252, "", magic, 0, Red) > 0) {
                  for (li_0 = 1; li_0 < level; li_0++) {
                     if (lot_multiplier) {
                        g_ticket_284 = OrderSend(Symbol(), OP_SELLLIMIT, NormalizeDouble(start_lot * MathPow(multiplier, li_0), gi_276), Bid + range * li_0 * gd_252, 3, Bid + range * li_0 * gd_252 +
                           sl * gd_252, Bid + range * li_0 * gd_252 - tp * gd_252, "", magic, 0, Red);
                     } else {
                        g_ticket_284 = OrderSend(Symbol(), OP_SELLLIMIT, NormalizeDouble(start_lot + increament * li_0, gi_276), Bid + range * li_0 * gd_252, 3, Bid + range * li_0 * gd_252 +
                           sl * gd_252, Bid + range * li_0 * gd_252 - tp * gd_252, "", magic, 0, Red);
                     }
                  }
               }
            } else {
               if (OrderSend(Symbol(), OP_SELL, start_lot, Bid, 3, 0, 0, "", magic, 0, Red) > 0) {
                  for (li_0 = 1; li_0 < level; li_0++) {
                     if (lot_multiplier) g_ticket_284 = OrderSend(Symbol(), OP_SELLLIMIT, NormalizeDouble(start_lot * MathPow(multiplier, li_0), gi_276), Bid + range * li_0 * gd_252, 3, 0, 0, "", magic, 0, Red);
                     else g_ticket_284 = OrderSend(Symbol(), OP_SELLLIMIT, NormalizeDouble(start_lot + increament * li_0, gi_276), Bid + range * li_0 * gd_252, 3, 0, 0, "", magic, 0, Red);
                  }
               }
            }
         }
      }
   }
   if (stealth_mode && total() > 0 && total() < level) {
      for (li_0 = 0; li_0 < OrdersTotal(); li_0++) {
         OrderSelect(li_0, SELECT_BY_POS, MODE_TRADES);
         if (OrderSymbol() != Symbol() || OrderMagicNumber() != magic) continue;
         l_cmd_4 = OrderType();
         l_ord_open_price_8 = OrderOpenPrice();
         l_ord_lots_16 = OrderLots();
      }
      if (l_cmd_4 == OP_BUY && Ask <= l_ord_open_price_8 - range * gd_252) {
         if (use_sl_and_tp) {
            if (lot_multiplier) g_ticket_284 = OrderSend(Symbol(), OP_BUY, NormalizeDouble(l_ord_lots_16 * multiplier, gi_276), Ask, 3, Ask - sl * gd_252, Ask + tp * gd_252, "", magic, 0, Blue);
            else g_ticket_284 = OrderSend(Symbol(), OP_BUY, NormalizeDouble(l_ord_lots_16 + increament, gi_276), Ask, 3, Ask - sl * gd_252, Ask + tp * gd_252, "", magic, 0, Blue);
         } else {
            if (lot_multiplier) g_ticket_284 = OrderSend(Symbol(), OP_BUY, NormalizeDouble(l_ord_lots_16 * multiplier, gi_276), Ask, 3, 0, 0, "", magic, 0, Blue);
            else g_ticket_284 = OrderSend(Symbol(), OP_BUY, NormalizeDouble(l_ord_lots_16 + increament, gi_276), Ask, 3, 0, 0, "", magic, 0, Blue);
         }
      }
      if (l_cmd_4 == OP_SELL && Bid >= l_ord_open_price_8 + range * gd_252) {
         if (use_sl_and_tp) {
            if (lot_multiplier) g_ticket_284 = OrderSend(Symbol(), OP_SELL, NormalizeDouble(l_ord_lots_16 * multiplier, gi_276), Bid, 3, Bid + sl * gd_252, Bid - tp * gd_252, "", magic, 0, Red);
            else g_ticket_284 = OrderSend(Symbol(), OP_SELL, NormalizeDouble(l_ord_lots_16 + increament, gi_276), Bid, 3, Bid + sl * gd_252, Bid - tp * gd_252, "", magic, 0, Red);
         } else {
            if (lot_multiplier) g_ticket_284 = OrderSend(Symbol(), OP_SELL, NormalizeDouble(l_ord_lots_16 * multiplier, gi_276), Bid, 3, 0, 0, "", magic, 0, Red);
            else g_ticket_284 = OrderSend(Symbol(), OP_SELL, NormalizeDouble(l_ord_lots_16 + increament, gi_276), Bid, 3, 0, 0, "", magic, 0, Red);
         }
      }
   }
   if (use_sl_and_tp && total() > 1) {
      for (li_0 = 0; li_0 < OrdersTotal(); li_0++) {
         OrderSelect(li_0, SELECT_BY_POS, MODE_TRADES);
         if (OrderSymbol() != Symbol() || OrderMagicNumber() != magic || OrderType() > OP_SELL) continue;
         l_cmd_4 = OrderType();
         l_ord_stoploss_24 = OrderStopLoss();
         l_ord_takeprofit_32 = OrderTakeProfit();
      }
      for (li_0 = OrdersTotal() - 1; li_0 >= 0; li_0--) {
         OrderSelect(li_0, SELECT_BY_POS, MODE_TRADES);
         if (OrderSymbol() != Symbol() || OrderMagicNumber() != magic || OrderType() > OP_SELL) continue;
         if (OrderType() == l_cmd_4)
            if (OrderStopLoss() != l_ord_stoploss_24 || OrderTakeProfit() != l_ord_takeprofit_32) OrderModify(OrderTicket(), OrderOpenPrice(), l_ord_stoploss_24, l_ord_takeprofit_32, 0, CLR_NONE);
      }
   }
   double ld_40 = 0;
   for (li_0 = 0; li_0 < OrdersTotal(); li_0++) {
      OrderSelect(li_0, SELECT_BY_POS, MODE_TRADES);
      if (OrderSymbol() != Symbol() || OrderMagicNumber() != magic || OrderType() > OP_SELL) continue;
      ld_40 += OrderProfit();
   }
   if (ld_40 >= tp_in_money || g_count_280 > 0) {
      closeall();
      closeall();
      closeall();
      g_count_280++;
      if (total() == 0) g_count_280 = 0;
   }
   if (!stealth_mode && use_sl_and_tp && total() < level) closeall();
   return (0);
}

double dailyprofit() {
   int l_day_0 = Day();
   double ld_ret_4 = 0;
   for (int l_pos_12 = 0; l_pos_12 < OrdersHistoryTotal(); l_pos_12++) {
      OrderSelect(l_pos_12, SELECT_BY_POS, MODE_HISTORY);
      if (OrderSymbol() != Symbol() || OrderMagicNumber() != magic) continue;
      if (TimeDay(OrderOpenTime()) == l_day_0) ld_ret_4 += OrderProfit();
   }
   return (ld_ret_4);
}

int total() {
   int l_count_0 = 0;
   for (int l_pos_4 = 0; l_pos_4 < OrdersTotal(); l_pos_4++) {
      OrderSelect(l_pos_4, SELECT_BY_POS, MODE_TRADES);
      if (OrderSymbol() != Symbol() || OrderMagicNumber() != magic) continue;
      l_count_0++;
   }
   return (l_count_0);
}

int signal() {
   double l_ibands_0 = iBands(Symbol(), 0, bb_period, bb_deviation, 0, PRICE_CLOSE, MODE_UPPER, bb_shift);
   double l_ibands_8 = iBands(Symbol(), 0, bb_period, bb_deviation, 0, PRICE_CLOSE, MODE_LOWER, bb_shift);
   double l_istochastic_16 = iStochastic(Symbol(), 0, k, d, slowing, MODE_SMA, price_field, MODE_SIGNAL, stoch_shift);
   double l_irsi_24 = iRSI(Symbol(), 0, rsi_period, PRICE_CLOSE, rsi_shift);
   if (use_bb && use_stoch && use_rsi) {
      if (High[bb_shift] > l_ibands_0 && l_istochastic_16 > up_level && l_irsi_24 > upper) return (2);
      if (Low[bb_shift] < l_ibands_8 && l_istochastic_16 < lo_level && l_irsi_24 < lower) return (-2);
   }
   if (use_bb && use_stoch && !use_rsi) {
      if (High[bb_shift] > l_ibands_0 && l_istochastic_16 > up_level) return (2);
      if (Low[bb_shift] < l_ibands_8 && l_istochastic_16 < lo_level) return (-2);
   }
   if (use_bb && !use_stoch && !use_rsi) {
      if (High[bb_shift] > l_ibands_0) return (2);
      if (Low[bb_shift] < l_ibands_8) return (-2);
   }
   if (!use_bb && use_stoch && use_rsi) {
      if (l_istochastic_16 > up_level && l_irsi_24 > upper) return (2);
      if (l_istochastic_16 < lo_level && l_irsi_24 < lower) return (-2);
   }
   if (!use_bb && use_stoch && !use_rsi) {
      if (l_istochastic_16 > up_level) return (2);
      if (l_istochastic_16 < lo_level) return (-2);
   }
   if (use_bb && !use_stoch && use_rsi) {
      if (High[bb_shift] > l_ibands_0 && l_irsi_24 > upper) return (2);
      if (Low[bb_shift] < l_ibands_8 && l_irsi_24 < lower) return (-2);
   }
   if (!use_bb && !use_stoch && use_rsi) {
      if (l_irsi_24 > upper) return (2);
      if (l_irsi_24 < lower) return (-2);
   }
   return (0);
}

void closeall() {
   for (int l_pos_0 = OrdersTotal() - 1; l_pos_0 >= 0; l_pos_0--) {
      OrderSelect(l_pos_0, SELECT_BY_POS, MODE_TRADES);
      if (OrderSymbol() != Symbol() || OrderMagicNumber() != magic) continue;
      if (OrderType() > OP_SELL) OrderDelete(OrderTicket());
      else {
         if (OrderType() == OP_BUY) OrderClose(OrderTicket(), OrderLots(), Bid, 3, CLR_NONE);
         else OrderClose(OrderTicket(), OrderLots(), Ask, 3, CLR_NONE);
      }
   }
}