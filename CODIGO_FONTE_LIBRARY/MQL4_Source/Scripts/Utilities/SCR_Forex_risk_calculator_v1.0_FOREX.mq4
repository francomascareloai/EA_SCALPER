/*
   Generated by EX4-TO-MQ4 decompiler V4.0.224.1 []
   Website: http://purebeam.biz
   E-mail : purebeam@gmail.com
*/
#property copyright "Copyright © 2010, ForexEgyetem"
#property link      "http://forexegyetem.hu"

#property indicator_chart_window

extern string max_risk_per_symbol = "200";
extern string max_risk_per_account = "5%";
extern bool add_profitable_positions = TRUE;
extern bool calc_details = FALSE;
extern color alert_color = Red;
extern color comment_color = Yellow;
double gda_unused_108[];
double gd_112;
double gd_120;
double gd_128 = 0.0;
double gd_unused_136 = 0.0;
double gd_144 = 0.0;
double g_tickvalue_152;
double g_ticksize_160;
double g_lotsize_168;
double g_point_176;
int g_ord_total_184;
int g_pos_188;
bool g_profitcalcmode_192;
double gd_204;
color g_color_212;
string gsa_216[100];
int gi_220 = 0;
int g_count_224 = 0;
string gs_228 = "Risk Calculator v4, 2010 © ForexEgyetem\n";
string gs_236 = "";
string gs_unused_244 = "Money Manager";

void clearComments() {
   for (int l_index_0 = 0; l_index_0 < gi_220; l_index_0++) {
      gsa_216[l_index_0] = "";
      ObjectDelete("myComment" + l_index_0);
   }
   gi_220 = 1;
}

void Comments(string as_0 = "") {
   gsa_216[gi_220] = as_0;
   gi_220++;
}

void printComments() {
   string ls_0 = "";
   gsa_216[0] = gs_228;
   Comments(gs_236);
   for (int l_index_8 = 0; l_index_8 < gi_220; l_index_8++) {
      ls_0 = ls_0 + gsa_216[l_index_8];
      if (ObjectType("myComment" + l_index_8) != 23) ObjectDelete("myComment" + l_index_8);
      if (ObjectFind("myComment" + l_index_8) == -1) ObjectCreate("myComment" + l_index_8, OBJ_LABEL, 0, Time[5], Close[5]);
      ObjectSetText("myComment" + l_index_8, gsa_216[l_index_8]);
      ObjectSet("myComment" + l_index_8, OBJPROP_CORNER, 0);
      ObjectSet("myComment" + l_index_8, OBJPROP_XDISTANCE, 20);
      ObjectSet("myComment" + l_index_8, OBJPROP_YDISTANCE, 20 * (l_index_8 + 1));
      ObjectSet("myComment" + l_index_8, OBJPROP_COLOR, g_color_212);
   }
   ObjectsRedraw();
   RefreshRates();
}

void getRisk() {
   int l_digits_32;
   double ld_0 = 0;
   double ld_8 = 0;
   double ld_unused_16 = 0;
   double ld_24 = 0;
   gd_204 = 0;
   g_count_224 = 0;
   g_ord_total_184 = OrdersTotal();
   if (g_ord_total_184 > 0) {
      for (g_pos_188 = 0; g_pos_188 < g_ord_total_184; g_pos_188++) {
         OrderSelect(g_pos_188, SELECT_BY_POS, MODE_TRADES);
         g_tickvalue_152 = MarketInfo(OrderSymbol(), MODE_TICKVALUE);
         g_ticksize_160 = MarketInfo(OrderSymbol(), MODE_TICKSIZE);
         g_point_176 = MarketInfo(OrderSymbol(), MODE_POINT);
         g_lotsize_168 = MarketInfo(OrderSymbol(), MODE_LOTSIZE);
         l_digits_32 = MarketInfo(OrderSymbol(), MODE_DIGITS);
         g_profitcalcmode_192 = MarketInfo(OrderSymbol(), MODE_PROFITCALCMODE);
         if (StringFind(Symbol(), "XAUUSD") != -1) {
            g_profitcalcmode_192 = TRUE;
            g_lotsize_168 = 100;
         }
         if (StringFind(Symbol(), "XAGUSD") != -1) {
            g_profitcalcmode_192 = TRUE;
            g_lotsize_168 = 5000;
         }
         if (g_profitcalcmode_192 == 0) {
            ld_24 = (OrderOpenPrice() - OrderStopLoss()) * OrderLots() / g_point_176 * g_tickvalue_152;
            if (calc_details) {
               Comments(OrderSymbol() + ": (" + DoubleToStr(OrderOpenPrice(), l_digits_32) + " - " + DoubleToStr(OrderStopLoss(), l_digits_32) + ") * " + DoubleToStr(OrderLots(), 1) + " / " + DoubleToStr(g_point_176, l_digits_32) + " * " + DoubleToStr(g_tickvalue_152, 2) + " = " + DoubleToStr(ld_24, l_digits_32) 
               + "\n");
            }
         } else {
            ld_24 = (OrderOpenPrice() - OrderStopLoss()) * OrderLots() * g_lotsize_168;
            if (calc_details) {
               Comments(OrderSymbol() + ": (" + DoubleToStr(OrderOpenPrice(), l_digits_32) + " - " + DoubleToStr(OrderStopLoss(), l_digits_32) + ") * " + DoubleToStr(OrderLots(), 1) + " * " + DoubleToStr(g_lotsize_168, 0) + " = " + DoubleToStr(ld_24, l_digits_32) 
               + "\n");
            }
         }
         if (OrderSymbol() == Symbol()) {
            gd_204 += OrderLots();
            g_count_224++;
         }
         if (OrderStopLoss() == 0.0) {
            ld_0 += MathAbs(ld_24);
            if (OrderSymbol() == Symbol()) ld_8 += MathAbs(ld_24);
         } else {
            if (OrderType() == OP_BUY || OrderType() == OP_BUYLIMIT || OrderType() == OP_BUYSTOP && OrderStopLoss() < OrderOpenPrice() || add_profitable_positions) {
               ld_0 += ld_24;
               if (OrderSymbol() == Symbol()) ld_8 += ld_24;
            }
            if (OrderType() == OP_SELL || OrderType() == OP_SELLLIMIT || OrderType() == OP_SELLSTOP && OrderStopLoss() > OrderOpenPrice() || add_profitable_positions) {
               ld_0 -= ld_24;
               if (OrderSymbol() == Symbol()) ld_8 -= ld_24;
            }
         }
      }
   }
   gd_128 = ld_8;
   gd_144 = ld_0;
}

int init() {
   start();
   return (0);
}

int start() {
   clearComments();
   if (StringFind(max_risk_per_account, "%") >= 0) gd_112 = StrToDouble(max_risk_per_account) / 100.0 * AccountBalance();
   else gd_112 = StrToDouble(max_risk_per_account);
   if (StringFind(max_risk_per_symbol, "%") >= 0) gd_120 = StrToDouble(max_risk_per_symbol) / 100.0 * AccountBalance();
   else gd_120 = StrToDouble(max_risk_per_symbol);
   Comments("Teljes számla kockázata: $" + DoubleToStr(gd_144, 1) + " / $" + DoubleToStr(gd_112, 1) + " \n");
   getRisk();
   Comments("Aktuális szimbólum kockázata: $" + DoubleToStr(gd_128, 1) + " / $" + DoubleToStr(gd_120, 1) + " \n");
   Comments("Nyittott, vagy függõ poziciok/lotok száma: " + DoubleToStr(g_count_224, 0) + " / " + DoubleToStr(gd_204, 1) + " \n");
   if (calc_details) {
      Comments("lotsize: " + MarketInfo(Symbol(), MODE_LOTSIZE) + " \n");
      Comments("tickvalue: " + MarketInfo(Symbol(), MODE_TICKVALUE) + " \n");
      Comments("ticksize: " + MarketInfo(Symbol(), MODE_TICKSIZE) + " \n");
      Comments("points: " + Point + " \n");
      Comments("profitcalc: " + MarketInfo(Symbol(), MODE_PROFITCALCMODE) + " \n");
   }
   if (gd_128 > gd_120 || gd_144 > gd_112) g_color_212 = alert_color;
   else g_color_212 = comment_color;
   printComments();
   return (0);
}

int deinit() {
   clearComments();
   return (0);
}
