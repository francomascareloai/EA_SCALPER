//@version=5
indicator("Goldbach by Leo", overlay=true)

//MEANING OF THE ACRONYMS

//Ext:(Long) External range, Stop Run 
//High:(Long) High
//RB:(Long) Rejection Block
//OB:(Long) Order Block
//FV:(Long) Fair Value Gap
//LV:(Long) Liquity Void
//BR:(Long) Break
//MB:(Long) Mitigation
//EQ: Equity
//MB:(Short) Mitigation
//BR:(Short) Break
//LV:(Short) Liquity Void
//FV:(Short) Fair Value Gap
//OB:(Short) Order Block
//RB:(Short) Rejection Block
//Low:(Short) Low
//Ext:(Short) External range, Stop Run 


// Inputs para seleccionar los días por mes
labelsAlign = input.string("--->", "Note",  tooltip = "If the day of the current month falls on a weekend, we change the date to the next trading day (Monday)", display = display.none)
po3_number = input.int(81, "PO3 Number", options = [27, 81, 243, 729, 2187,6581], tooltip = "This number is used to define our Trading ranges", display = display.none)
input_day_january = input.int(8, title="January Day", minval=1, maxval=31)
input_day_february = input.int(7, title="February Day", minval=1, maxval=29)
input_day_march = input.int(6, title="March Day", minval=1, maxval=31)
input_day_april = input.int(5, title="April Day", minval=1, maxval=30)
input_day_may = input.int(4, title="May Day", minval=1, maxval=31)
input_day_june = input.int(3, title="June Day", minval=1, maxval=30)
input_day_july = input.int(2, title="July Day", minval=1, maxval=31)
input_day_august = input.int(1, title="August Day", minval=1, maxval=31)
input_day_september = input.int(9, title="September Day", minval=1, maxval=30)
input_day_october = input.int(8, title="October Day", minval=1, maxval=31)
input_day_november = input.int(7, title="November Day", minval=1, maxval=30)
input_day_december = input.int(6, title="December Day", minval=1, maxval=31)
lineWidth = input.int(2, 'Width Lines', group = 'Level Graphics')
lineStyle = input.string('Dashed', 'Line Style', ['Solid', 'Dashed', 'Dotted'], group = 'Level Graphics')
labelSize = input.string('small', 'Label Text Size', ['small', 'normal', 'large'])
leftOffsetLength = input.int(title="Line Left Offset", defval=90)
rightOffsetLength = input.int(title="Line Right Offset", defval=10)

// Input para seleccionar la zona horaria UTC
input_utc_offset = input.int(0, title="Offset de UTC", minval=-12, maxval=14)  // Offset de UTC en horas

// Función para obtener el día configurado para un mes
f_get_day_for_month(month) =>
    switch month
        1 => input_day_january
        2 => input_day_february
        3 => input_day_march
        4 => input_day_april
        5 => input_day_may
        6 => input_day_june
        7 => input_day_july
        8 => input_day_august
        9 => input_day_september
        10 => input_day_october
        11 => input_day_november
        12 => input_day_december

// Variables actuales
current_month = month
current_year = year
current_day = dayofmonth

// Día configurado para el mes actual
day_for_month = f_get_day_for_month(current_month)

// Variables persistentes para high y low del día configurado
var float high_day = na
var float low_day = na
var float avg_day = na
var line high_line = na
var line low_line = na
var line avg_line = na
var label high_label = na
var label low_label = na
var label avg_label = na
var bool saved_today = false
var line fib_level_1_line = na
var line fib_level_2_line = na
var line fib_level_3_line = na
var line fib_level_4_line = na
var line fib_level_5_line = na
var line fib_level_6_line = na
var line fib_level_7_line = na
var line fib_level_8_line = na
var line fib_level_9_line = na
var line fib_level_10_line = na
var line fib_level_11_line = na
var line fib_level_12_line = na
var line fib_level_13_line = na
var line fib_level_14_line = na
var line fib_level_15_line = na
var line fib_level_16_line = na
var line fib_level_17_line = na
var line fib_level_18_line = na
var line fib_level_19_line = na
var line fib_level_20_line = na
var line fib_level_21_line = na
var label fib_label_1 = na
var label fib_label_2 = na
var label fib_label_3 = na
var label fib_label_4 = na
var label fib_label_5 = na
var label fib_label_6 = na
var label fib_label_7 = na
var label fib_label_8 = na
var label fib_label_9 = na
var label fib_label_10 = na
var label fib_label_11 = na
var label fib_label_12 = na
var label fib_label_13 = na
var label fib_label_14 = na
var label fib_label_15 = na
var label fib_label_16 = na
var label fib_label_17 = na
var label fib_label_18 = na
var label fib_label_19 = na
var label fib_label_20 = na
var label fib_label_21 = na

// Ajustamos la hora del gráfico para la zona horaria seleccionada
utc_time = timestamp(current_year, current_month, current_day, 0, 0) + (input_utc_offset * 3600)

// Usamos security para obtener el high y low del día completo (temporalidad diaria)
high_daily = request.security(syminfo.tickerid, "D", high, lookahead=barmerge.lookahead_on)
low_daily = request.security(syminfo.tickerid, "D", low, lookahead=barmerge.lookahead_on)


// Capturar high, low y media cuando llegue el día configurado (input_day)
if (current_day == day_for_month and not saved_today)
    // Guardamos el high, low y calculamos la media
    high_day := high_daily
    low_day := low_daily
    avg_day := math.floor((high_day + low_day) / 2)
    saved_today := true // Marcamos que ya guardamos los valores



if (saved_today)
    // Eliminar las líneas si ya existen
    if not na(high_line)
        line.delete(high_line)
    if not na(low_line)
        line.delete(low_line)
    if not na(avg_line)
        line.delete(avg_line)
    if not na(fib_level_1_line)
        line.delete(fib_level_1_line)        
    if not na(fib_level_2_line)
        line.delete(fib_level_2_line)  
    if not na(fib_level_3_line)
        line.delete(fib_level_3_line)  
    if not na(fib_level_4_line)
        line.delete(fib_level_4_line)   
    if not na(fib_level_5_line)
        line.delete(fib_level_5_line)
    if not na(fib_level_6_line)
        line.delete(fib_level_6_line)
    if not na(fib_level_7_line)
        line.delete(fib_level_7_line)
    if not na(fib_level_8_line)
        line.delete(fib_level_8_line)
    if not na(fib_level_9_line)
        line.delete(fib_level_9_line)
    if not na(fib_level_10_line)
        line.delete(fib_level_10_line)
    if not na(fib_level_11_line)
        line.delete(fib_level_11_line)
    if not na(fib_level_12_line)
        line.delete(fib_level_12_line)   
    if not na(fib_level_13_line)
        line.delete(fib_level_13_line)
    if not na(fib_level_14_line)
        line.delete(fib_level_14_line)
    if not na(fib_level_15_line)
        line.delete(fib_level_15_line)
    if not na(fib_level_16_line)
        line.delete(fib_level_16_line)
    if not na(fib_level_17_line)
        line.delete(fib_level_17_line)
    if not na(fib_level_18_line)
        line.delete(fib_level_18_line)
    if not na(fib_level_19_line)
        line.delete(fib_level_19_line)
    if not na(fib_level_20_line)
        line.delete(fib_level_20_line)
    if not na(fib_level_21_line)
        line.delete(fib_level_21_line)
    if not na(fib_label_1)
        label.delete(fib_label_1)
    if not na(fib_label_2)
        label.delete(fib_label_2)
    if not na(fib_label_3)
        label.delete(fib_label_3)
    if not na(fib_label_4)
        label.delete(fib_label_4)
    if not na(fib_label_5)
        label.delete(fib_label_5)
    if not na(fib_label_6)
        label.delete(fib_label_6)
    if not na(fib_label_7)
        label.delete(fib_label_7)
    if not na(fib_label_8)
        label.delete(fib_label_8)
    if not na(fib_label_9)
        label.delete(fib_label_9)
    if not na(fib_label_10)
        label.delete(fib_label_10)
    if not na(fib_label_11)
        label.delete(fib_label_11)
    if not na(fib_label_12)
        label.delete(fib_label_12)
    if not na(fib_label_13)
        label.delete(fib_label_13)
    if not na(fib_label_14)
        label.delete(fib_label_14)
    if not na(fib_label_15)
        label.delete(fib_label_15)
    if not na(fib_label_16)
        label.delete(fib_label_16)
    if not na(fib_label_17)
        label.delete(fib_label_17)
    if not na(fib_label_18)
        label.delete(fib_label_18)
    if not na(fib_label_19)
        label.delete(fib_label_19)
    if not na(fib_label_20)
        label.delete(fib_label_20)
    if not na(fib_label_21)
        label.delete(fib_label_21)
    // Dibujar nuevas líneas
    //high_line := line.new(x1=bar_index, y1=high_day, x2=bar_index + 1, y2=high_day, color=color.green, width=1, extend=extend.right)
    //low_line := line.new(x1=bar_index, y1=low_day, x2=bar_index + 1, y2=low_day, color=color.red, width=1, extend=extend.right)
    //avg_line := line.new(x1=bar_index, y1=avg_day, x2=bar_index + 1, y2=avg_day, color=color.blue, width=1, extend=extend.right)

    // Dibujar etiquetas solo si no existen
    //if na(high_label)
    //    high_label := label.new(bar_index, high_day, text="High: " + str.tostring(high_day), color=color.green, style=label.style_label_up, textcolor=color.white, size=size.small)
    //else
    //    label.set_xy(high_label, bar_index, high_day)
    //    label.set_text(high_label, "High: " + str.tostring(high_day))

    //if na(low_label)
    //    low_label := label.new(bar_index, low_day, text="Low: " + str.tostring(low_day), color=color.red, style=label.style_label_down, textcolor=color.white, size=size.small)
    //else
    //    label.set_xy(low_label, bar_index, low_day)
    //    label.set_text(low_label, "Low: " + str.tostring(low_day))

    //if na(avg_label)
    //    avg_label := label.new(bar_index, avg_day, text="Avg: " + str.tostring(avg_day), color=color.blue, style=label.style_label_left, textcolor=color.white, size=size.small)
    //else
    //    label.set_xy(avg_label, bar_index, avg_day)
    //    label.set_text(avg_label, "Avg: " + str.tostring(avg_day))

    // Calcular la secuencia basada en Fibonacci

    fib_level_1 = avg_day + ((po3_number/2)*1.224)
    fib_level_2 = avg_day + (po3_number/2)
    fib_level_3 = avg_day + ((po3_number/2)*0.941)
    fib_level_4 = avg_day + ((po3_number/2)*0.781)
    fib_level_5 = avg_day + ((po3_number/2)*0.661)
    fib_level_6 = avg_day + ((po3_number/2)*0.541)
    fib_level_7 = avg_day + ((po3_number/2)*0.421)
    fib_level_8 = avg_day + ((po3_number/2)*0.301)
    fib_level_9 = avg_day + ((po3_number/2)*0.180)
    fib_level_10 = avg_day + ((po3_number/2)*0.060)
    fib_level_11 = avg_day
    fib_level_12 = avg_day - ((po3_number/2)*0.060)
    fib_level_13 = avg_day - ((po3_number/2)*0.180)
    fib_level_14 = avg_day - ((po3_number/2)*0.301)
    fib_level_15 = avg_day - ((po3_number/2)*0.421)
    fib_level_16 = avg_day - ((po3_number/2)*0.541)
    fib_level_17 = avg_day - ((po3_number/2)*0.661)
    fib_level_18 = avg_day - ((po3_number/2)*0.781)
    fib_level_19 = avg_day - ((po3_number/2)*0.941)
    fib_level_20 = avg_day - (po3_number/2)
    fib_level_21 = avg_day - ((po3_number/2)*1.224)

    // Dibujar las líneas Fibonacci
    // Asegurarse de que las líneas persistan
    lStyle = lineStyle == 'Solid' ? line.style_solid : lineStyle == 'Dotted' ? line.style_dotted : line.style_dashed
    lSize = labelSize == 'small' ? size.small : labelSize == 'normal' ? size.normal : size.large
    fib_level_1_line := line.new(x1=bar_index - leftOffsetLength, y1=fib_level_1, x2=bar_index + rightOffsetLength, y2=fib_level_1, color=color.orange, width=lineWidth, style=lStyle, extend=extend.none)
    fib_level_2_line := line.new(x1=bar_index - leftOffsetLength, y1=fib_level_2, x2=bar_index + rightOffsetLength, y2=fib_level_2, color=color.red, width=lineWidth, style=lStyle, extend=extend.none)
    fib_level_3_line := line.new(x1=bar_index - leftOffsetLength, y1=fib_level_3, x2=bar_index + rightOffsetLength, y2=fib_level_3, color=color.silver, width=lineWidth, style=lStyle, extend=extend.none)
    fib_level_4_line := line.new(x1=bar_index - leftOffsetLength, y1=fib_level_4, x2=bar_index + rightOffsetLength, y2=fib_level_4, color=color.silver, width=lineWidth, style=lStyle, extend=extend.none)
    fib_level_5_line := line.new(x1=bar_index - leftOffsetLength, y1=fib_level_5, x2=bar_index + rightOffsetLength, y2=fib_level_5, color=color.silver, width=lineWidth, style=lStyle, extend=extend.none)
    //fib_level_6_line := line.new(x1=bar_index - leftOffsetLength, y1=fib_level_6, x2=bar_index + rightOffsetLength, y2=fib_level_6, color=color.gray, width=lineWidth, style=lStyle, extend=extend.none)
    fib_level_7_line := line.new(x1=bar_index - leftOffsetLength, y1=fib_level_7, x2=bar_index + rightOffsetLength, y2=fib_level_7, color=color.silver, width=lineWidth, style=lStyle, extend=extend.none)
    //fib_level_8_line := line.new(x1=bar_index - leftOffsetLength, y1=fib_level_8, x2=bar_index + rightOffsetLength, y2=fib_level_8, color=color.gray, width=lineWidth, style=lStyle, extend=extend.none)
    fib_level_9_line := line.new(x1=bar_index - leftOffsetLength, y1=fib_level_9, x2=bar_index + rightOffsetLength, y2=fib_level_9, color=color.silver, width=lineWidth, style=lStyle, extend=extend.none)
    fib_level_10_line := line.new(x1=bar_index - leftOffsetLength, y1=fib_level_10, x2=bar_index + rightOffsetLength, y2=fib_level_10, color=color.silver, width=lineWidth, style=lStyle, extend=extend.none)
    fib_level_11_line := line.new(x1=bar_index - leftOffsetLength, y1=fib_level_11, x2=bar_index + rightOffsetLength, y2=fib_level_11, color=color.red, width=lineWidth, style=lStyle, extend=extend.none)
    fib_level_12_line := line.new(x1=bar_index - leftOffsetLength, y1=fib_level_12, x2=bar_index + rightOffsetLength, y2=fib_level_12, color=color.silver, width=lineWidth, style=lStyle, extend=extend.none)
    fib_level_13_line := line.new(x1=bar_index - leftOffsetLength, y1=fib_level_13, x2=bar_index + rightOffsetLength, y2=fib_level_13, color=color.silver, width=lineWidth, style=lStyle, extend=extend.none)
    //fib_level_14_line := line.new(x1=bar_index - leftOffsetLength, y1=fib_level_14, x2=bar_index + rightOffsetLength, y2=fib_level_14, color=color.gray, width=lineWidth, style=lStyle, extend=extend.none)
    fib_level_15_line := line.new(x1=bar_index - leftOffsetLength, y1=fib_level_15, x2=bar_index + rightOffsetLength, y2=fib_level_15, color=color.silver, width=lineWidth, style=lStyle, extend=extend.none)
    //fib_level_16_line := line.new(x1=bar_index - leftOffsetLength, y1=fib_level_16, x2=bar_index + rightOffsetLength, y2=fib_level_16, color=color.gray, width=lineWidth, style=lStyle, extend=extend.none)
    fib_level_17_line := line.new(x1=bar_index - leftOffsetLength, y1=fib_level_17, x2=bar_index + rightOffsetLength, y2=fib_level_17, color=color.silver, width=lineWidth, style=lStyle, extend=extend.none)
    fib_level_18_line := line.new(x1=bar_index - leftOffsetLength, y1=fib_level_18, x2=bar_index + rightOffsetLength, y2=fib_level_18, color=color.silver, width=lineWidth, style=lStyle, extend=extend.none)
    fib_level_19_line := line.new(x1=bar_index - leftOffsetLength, y1=fib_level_19, x2=bar_index + rightOffsetLength, y2=fib_level_19, color=color.silver, width=lineWidth, style=lStyle, extend=extend.none)
    fib_level_20_line := line.new(x1=bar_index - leftOffsetLength, y1=fib_level_20, x2=bar_index + rightOffsetLength, y2=fib_level_20, color=color.red, width=lineWidth, style=lStyle, extend=extend.none)
    fib_level_21_line := line.new(x1=bar_index - leftOffsetLength, y1=fib_level_21, x2=bar_index + rightOffsetLength, y2=fib_level_21, color=color.orange, width=lineWidth, style=lStyle, extend=extend.none)

    // Dibujar etiquetas para los niveles Fibonacci
    if saved_today
        if na(fib_label_1)
            var fib1 = "(Long) External Range,\nStop Run"
            fib_label_1 := label.new(bar_index + (rightOffsetLength+5), fib_level_1, text="Ext: " + str.tostring(fib_level_1, format.mintick), color=#ff990000, style=label.style_label_center, textcolor=color.orange, size=lSize,tooltip = fib1)

        if na(fib_label_2)
            var fib2 ="(Long) High"
            fib_label_2 := label.new(bar_index + (rightOffsetLength+5), fib_level_2, text="High: " + str.tostring(fib_level_2, format.mintick), color=#ff525200, style=label.style_label_center, textcolor=color.red, size=lSize,tooltip = fib2)

        if na(fib_label_3)
            var fib3 ="(Long) Zone of Rejection Block"
            fib_label_3 := label.new(bar_index + (rightOffsetLength+5), fib_level_3, text="↑ RB ↑ " + str.tostring(fib_level_3, format.mintick), color=#b2b5be00, style=label.style_label_center, textcolor=color.silver, size=lSize,tooltip = fib3)

        if na(fib_label_4)
            var fib4 ="(Long) Zone of Order Block"
            fib_label_4 := label.new(bar_index + (rightOffsetLength+5), fib_level_4, text="↑ OB ↑ " + str.tostring(fib_level_4, format.mintick), color=#b2b5be00, style=label.style_label_center, textcolor=color.silver, size=lSize,tooltip = fib4)

        if na(fib_label_5)
            var fib5 ="(Long) Zone of Fair Value Gap"
            fib_label_5 := label.new(bar_index + (rightOffsetLength+5), fib_level_5, text="↑ FV ↑ " + str.tostring(fib_level_5, format.mintick), color=#b2b5be00, style=label.style_label_center, textcolor=#b2b5be, size=lSize,tooltip = fib5)

        //if na(fib_label_6)
        //    fib_label_6 := label.new(bar_index + (rightOffsetLength+5), fib_level_6, text="LV: " + str.tostring(fib_level_6, format.mintick), color=#787b8600, style=label.style_label_center, textcolor=color.gray, size=lSize)

        if na(fib_label_7)
            var fib7 ="(Long) Zone of Liquity Void"
            fib_label_7 := label.new(bar_index + (rightOffsetLength+5), fib_level_7, text="↑ LV ↑ " + str.tostring(fib_level_7, format.mintick), color=#b2b5be00, style=label.style_label_center, textcolor=color.silver, size=lSize,tooltip = fib7)

        //if na(fib_label_8)
        //    fib_label_8 := label.new(bar_index + (rightOffsetLength+5), fib_level_8, text="MB: " + str.tostring(fib_level_8, format.mintick), color=#787b8600, style=label.style_label_center, textcolor=color.gray, size=lSize)

        if na(fib_label_9)
            var fib9 ="(Long) Zone of Break"
            fib_label_9 := label.new(bar_index + (rightOffsetLength+5), fib_level_9, text="↑ BR ↑ " + str.tostring(fib_level_9, format.mintick), color=#b2b5be00, style=label.style_label_center, textcolor=color.silver, size=lSize,tooltip = fib9)

        if na(fib_label_10)
            var fib10 ="(Long) Zone of Mitigation"
            fib_label_10 := label.new(bar_index + (rightOffsetLength+5), fib_level_10, text="↑ MB ↑ " + str.tostring(fib_level_10, format.mintick), color=#b2b5be00, style=label.style_label_center, textcolor=color.silver, size=lSize,tooltip = fib10)

        if na(fib_label_11)
            var fib11 ="Equity"
            fib_label_11 := label.new(bar_index + (rightOffsetLength+5), fib_level_11, text="EQ: " + str.tostring(fib_level_11, format.mintick), color=#ff525200, style=label.style_label_center, textcolor=color.red, size=lSize,tooltip = fib11)

        if na(fib_label_12)
            var fib12 ="(Short) Zone of Mitigation"
            fib_label_12 := label.new(bar_index + (rightOffsetLength+5), fib_level_12, text="↓ MB ↓ " + str.tostring(fib_level_12, format.mintick), color=#b2b5be00, style=label.style_label_center, textcolor=color.silver, size=lSize,tooltip = fib12)

        if na(fib_label_13)
            var fib13 ="(Short) Zone of Break"
            fib_label_13 := label.new(bar_index + (rightOffsetLength+5), fib_level_13, text="↓ BR ↓ " + str.tostring(fib_level_13, format.mintick), color=#b2b5be00, style=label.style_label_center, textcolor=color.silver, size=lSize,tooltip = fib13)

        //if na(fib_label_14)
        //    fib_label_14 := label.new(bar_index + (rightOffsetLength+5), fib_level_14, text="F14: " + str.tostring(fib_level_14, format.mintick), color=#787b8600, style=label.style_label_center, textcolor=color.gray, size=lSize)

        if na(fib_label_15)
            var fib15 ="(Short) Zone of Liquity Void"
            fib_label_15 := label.new(bar_index + (rightOffsetLength+5), fib_level_15, text="↓ LV ↓ " + str.tostring(fib_level_15, format.mintick), color=#b2b5be00, style=label.style_label_center, textcolor=color.silver, size=lSize,tooltip = fib15)

        //if na(fib_label_16)
        //    fib_label_16 := label.new(bar_index + (rightOffsetLength+5), fib_level_16, text="F16: " + str.tostring(fib_level_16, format.mintick), color=#787b8600, style=label.style_label_center, textcolor=color.gray, size=lSize)

        if na(fib_label_17)
            var fib17 ="(Short) Zone of Fair Value Gap"
            fib_label_17 := label.new(bar_index + (rightOffsetLength+5), fib_level_17, text="↓ FV ↓ " + str.tostring(fib_level_17, format.mintick), color=#b2b5be00, style=label.style_label_center, textcolor=color.silver, size=lSize,tooltip = fib17)

        if na(fib_label_18)
            var fib18 ="(Short) Zone of Order Block"
            fib_label_18 := label.new(bar_index + (rightOffsetLength+5), fib_level_18, text="↓ OB ↓ " + str.tostring(fib_level_18, format.mintick), color=#b2b5be00, style=label.style_label_center, textcolor=color.silver, size=lSize,tooltip = fib18)

        if na(fib_label_19)
            var fib19 ="(Short) Zone of Rejection Block"
            fib_label_19 := label.new(bar_index + (rightOffsetLength+5), fib_level_19, text="↓ RB ↓ " + str.tostring(fib_level_19, format.mintick), color=#b2b5be00, style=label.style_label_center, textcolor=color.silver, size=lSize,tooltip = fib19)
 
        if na(fib_label_20)
            var fib20 ="(Short) Low"
            fib_label_20 := label.new(bar_index + (rightOffsetLength+5), fib_level_20, text="Low: " + str.tostring(fib_level_20, format.mintick), color=#ff525200, style=label.style_label_center, textcolor=color.red, size=lSize,tooltip = fib20)

        if na(fib_label_21)
            var fib21 ="(Short) External Range,\nStop Run"
            fib_label_21 := label.new(bar_index + (rightOffsetLength+5), fib_level_21, text="Ext: " + str.tostring(fib_level_21, format.mintick), color=#ff990000, style=label.style_label_center, textcolor=color.orange, size=lSize,tooltip = fib21)

// Cuando llega el día configurado para el siguiente mes, se reinician los valores de `saved_today` para capturar el high/low del nuevo mes
if (current_day == f_get_day_for_month(current_month + 1) % 12 and not na(high_day) and not na(low_day))
    saved_today := false
