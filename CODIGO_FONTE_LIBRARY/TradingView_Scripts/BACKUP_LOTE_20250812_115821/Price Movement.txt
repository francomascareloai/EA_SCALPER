//@version=5

// Благодарность приветствуется ! Gratitude is welcome!
//  You may donate to me via  ~ BTC ~ 1EpDN7pg1WqURcK7te5kQtgx3H17wuHiV7   
// Do it if you find the stuff useful ! 

indicator(title='!<*[$/RSI Candles EMA Trend S/R Signals/$]*>!', shorttitle="📈 Price Movement 📉", overlay=false)
// Получение входных данных
fast_length = input.int(8, title='Быстрая длина', minval=1)
slow_length = input.int(16, title='Медленная длина', minval=1)
src = input(title='Источник', defval=close)
// RSI/EMA
LENema1 = input.int(5, minval=1, title='(Жёлтая линия)')
offs = input.float(13, title='(Зеленая линия)')
offs2 = input.float(13, title='(Красная линия)')

rsiema1 = ta.rsi(close, LENema1)
ema1 = ta.ema(rsiema1, LENema1)
prev_ema1 = ta.ema(ta.rsi(close, LENema1)[1], LENema1)

plot(ema1, title='Средний диапазон EMA', color=#ebfc044d, linewidth=1)
plot(ema1 + offs, title='Верхний диапазон EMA', color=#02fd0b, linewidth=1)
plot(ema1 + offs2 * -1, title='Нижний диапазон EMA', color=#fc0303, linewidth=1)
// Сигнал на вход в покупку
buy_signal_condition = (rsiema1[1] + offs < prev_ema1[1]) and (rsiema1 + offs >= ema1)
plotshape(series=buy_signal_condition and not buy_signal_condition[1], style=shape.arrowup, location=location.bottom, color=#01fc09, size=size.small)
// Сигнал на вход в продажу
sell_signal_condition = (rsiema1[1] + offs2 * -1 > prev_ema1[1]) and (rsiema1 + offs2 * -1 <= ema1)
plotshape(series=sell_signal_condition and not sell_signal_condition[1], style=shape.arrowdown, location=location.top, color=#f30505, size=size.small)
// Свечное представление RSI
len = input.int(4, 'Длина RSI', minval=1)

t(x) =>
    request.security(syminfo.tickerid, timeframe.period, ta.rsi(x, len))

o = t(open)
h = t(high)
l = t(low)
c = t(close)
col = o > c ? #ff5252 : #00e676
plotcandle(o, h, l, c, title='RSIсвечи', color=col)
// Границы S/R уровней
hline(90, color=#ff5252, linestyle=hline.style_solid, title='Верхний')
hline(80, color=#ff5252, linestyle=hline.style_solid, title='Верхний')
hline(50, color=#8384856b, linestyle=hline.style_dashed, title='Средний')
hline(20, color=#4caf50, linestyle=hline.style_solid, title='Нижний')
hline(10, color=#4caf50, linestyle=hline.style_solid, title='Нижний')
// Переменные для хранения предыдущих значений сигналов
var bool prev_buy_signal = na
var bool prev_sell_signal = na

var float last_buy = na
var float last_sell = na
// Сигналы
buy_signal = (c[1] > 20 and c < 20 and c > 10)
sell_signal = (c[1] < 80 and c > 80 and c < 90)
// Сигналы 
PlotSell2 = (c < 80 and c[1] > 80 and c[1] < 90)
PlotBuy2 = (c > 20 and c[1] < 20 and c[1] > 10)
// Обновление предыдущих значений сигналов
prev_buy_signal := buy_signal ? true : (sell_signal ? false : na)
prev_sell_signal := sell_signal ? true : (buy_signal ? false : na)
// Отображение сигналов
plotshape(series=buy_signal, title="Buy", location=location.bottom, style=shape.circle, size=size.tiny, color=#e6ff02)
plotshape(series=sell_signal, title="Sell", location=location.top, style=shape.circle, size=size.tiny, color=#e6ff02)

if (PlotBuy2)
    last_buy := bar_index
if (PlotSell2)
    last_sell := bar_index

bgcolor(PlotBuy2 ? #4caf504d : na)
bgcolor(PlotSell2 ? #ff52524d : na)

plotshape(series=PlotBuy2, title="Buy", location=location.bottom, style=shape.triangleup, size=size.tiny, color=#02f70e)
plotshape(series=PlotSell2, title="Sell", location=location.top, style=shape.triangledown, size=size.tiny, color=#ff0000)

var table_logo = table.new(position.bottom_right, 1, 1)
if barstate.islast
    table.cell(table_logo, 0, 0, 'DM', text_size=size.normal, text_color=#00897b)

//====================================================================================//
