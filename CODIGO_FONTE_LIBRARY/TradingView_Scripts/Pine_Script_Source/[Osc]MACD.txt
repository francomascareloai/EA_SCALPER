//@version=6
indicator('<[Osc]MACD Линейная Регрессия]>','<[MACD Линейная Регрессия]>', false, max_bars_back = 10)

// === НАСТРОЙКИ MACD ===
fastLength = input.int(12, title = 'Быстрый период', minval = 1)
slowLength = input.int(26, title = 'Медленный период', minval = 1)
signalLength = input.int(9, title = 'Сигнальный период', minval = 1)

// === ОСНОВНЫЕ РАСЧЕТЫ MACD ===
hline(0, 'Нулевая линия', linewidth = 1, color = color.gray)
fastMA = ta.ema(close, fastLength)
slowMA = ta.ema(close, slowLength)
macd = fastMA - slowMA
signal = ta.sma(macd, signalLength)

// === ОТОБРАЖЕНИЕ ПЕРЕСЕЧЕНИЙ ===
plot(ta.crossover(macd, signal) ? signal : na, title = 'Пересечение вверх', style = plot.style_circles, color = color.new(#15c300, 0), linewidth = 5, show_last = 200)
plot(ta.crossunder(macd, signal) ? signal : na, title = 'Пересечение вниз', style = plot.style_circles, color = color.new(#ed0000, 0), linewidth = 5, show_last = 200)

// === НАСТРОЙКИ ОТОБРАЖЕНИЯ ===
macd_colorChange = input(true, title = 'Изменять цвет линии MACD при пересечении?')
showhist = input(true, title = 'Показывать гистограмму?')
hist_colorChange = input(true, title = '4 цвета для гистограммы MACD?')

// === ЦВЕТА ЛИНИЙ ===
macd_IsAbove = macd >= signal
macd_IsBelow = macd < signal
macd_color = macd_colorChange ? macd_IsAbove ? color.yellow : color.red : color.red
signal_color = macd_colorChange ? macd_IsAbove ? color.blue : color.blue : color.lime

// === ГИСТОГРАММА (СТОЛБЦЫ) ===
hist = macd - signal
histAIsUp = hist > hist[1] and hist > 0
histAIsDown = hist < hist[1] and hist > 0
histBIsDown = hist < hist[1] and hist <= 0
histBIsUp = hist > hist[1] and hist <= 0
plot_color = hist_colorChange ? histAIsUp ? color.aqua : histAIsDown ? color.blue : histBIsDown ? color.red : histBIsUp ? color.maroon : color.yellow : color.gray

// Сначала рисуем гистограмму (столбцы)
plot(showhist and bool(hist) ? hist : na, title = 'Гистограмма', color = plot_color, style = plot.style_columns, linewidth = 4)

// Затем рисуем сигнальные линии поверх гистограммы
plot(signal, color = signal_color, title = 'Сигнальная линия')
plot(macd, color = macd_color, title = 'Линия MACD', linewidth = 2)

// === ФУНКЦИЯ ОТРИСОВКИ ЛИНИЙ ===
drawLine(X1, Y1, X2, Y2, ExtendType, Color, LineStyle) =>
    var line Line = na
    Line := line.new(X1, Y1, X2, Y2, xloc.bar_index, ExtendType, Color, LineStyle, 1)
    line.delete(Line[1])

// === ЛИНЕЙНАЯ РЕГРЕССИЯ ===
rsdcr2(PeriodMinusOne, Deviations, Estimate) =>
    var period = PeriodMinusOne + 1
    var devDenominator = Estimate == 'Unbiased' ? PeriodMinusOne : period
    Ex = 0.0
    Ex2 = 0.0
    Exy = 0.0
    Ey = 0.0
    for i = 0 to PeriodMinusOne by 1
        closeI = nz(macd[i])
        Ex := Ex + i
        Ex2 := Ex2 + i * i
        Exy := Exy + closeI * i
        Ey := Ey + closeI
        Ey
    ExEx = Ex * Ex
    slope = Ex2 == ExEx ? 0.0 : (period * Exy - Ex * Ey) / (period * Ex2 - ExEx)
    linearRegression = (Ey - slope * Ex) / period
    intercept = linearRegression + bar_index * slope
    deviation = 0.0
    for i = 0 to PeriodMinusOne by 1
        deviation := deviation + math.pow(nz(macd[i]) - (intercept - bar_index[i] * slope), 2.0)
        deviation
    deviation := Deviations * math.sqrt(deviation / devDenominator)
    correlate = ta.correlation(macd, bar_index, period)
    r2 = math.pow(correlate, 2.0)
    [linearRegression, slope, deviation, correlate, r2]

// === НАСТРОЙКИ ЛИНЕЙНОЙ РЕГРЕССИИ ===
periodTrend = input.int(89, 'Период тренда', minval = 4)
deviationsAmnt = input.float(1.5, ' Отклонение', minval = 0.1, step = 0.1)
estimatorType = input.string('Unbiased', ' Оценка', options = ['Biased', 'Unbiased'])
var extendType = input.string('Right', 'Продление', options = ['Right', 'Segment']) == 'Right' ? extend.right : extend.none

periodMinusOne = periodTrend - 1
[linReg, slope, deviation, correlate, r2] = rsdcr2(periodMinusOne, deviationsAmnt, estimatorType)

// === ОТРИСОВКА ЛИНИЙ РЕГРЕССИИ ===
endPointBar = bar_index - periodTrend + 1
endPointY = linReg + slope * periodMinusOne
drawLine(endPointBar, endPointY + deviation, bar_index, linReg + deviation, extendType, color.red, line.style_solid)
drawLine(endPointBar, endPointY, bar_index, linReg, extendType, #CCCC00ff, line.style_dotted)
drawLine(endPointBar, endPointY - deviation, bar_index, linReg - deviation, extendType, color.green, line.style_solid)

// === МЕТКИ КОРРЕЛЯЦИИ ===
var label Label = na
Label := label.new(math.max(0, endPointBar), endPointY, text = str.tostring(correlate, '#.####'), color = 0.0 > correlate ? color.red : color.green, textcolor = #FFFFFFff, style = label.style_label_right, tooltip = 'Корреляция: ' + str.tostring(correlate) + '\nR2: ' + str.tostring(r2))
label.delete(Label[1])

// === ЗИГЗАГ ===
length = input(21, title = 'Длина зигзага')

sg = signal[length]
ma = macd[length]

ph = ta.pivothigh(macd, length, length)
pl = ta.pivotlow(macd, length, length)
valH = ta.valuewhen(bool(ph), ma, 0)
valL = ta.valuewhen(bool(pl), ma, 0)
valpH = ta.valuewhen(bool(ph), ma, 1)
valpL = ta.valuewhen(bool(pl), ma, 1)

d = math.abs(ma - sg)
n = bar_index
label lbl = na
HIH = valH > valpH ? 'HH' : na
HIL = valH < valpH ? 'LH' : na
LOL = valL < valpL ? 'LL' : na
LOH = valL > valpL ? 'HL' : na

if bool(ph) and valH > valpH
    lbl := label.new(n[length], math.max(ma, sg), HIH, color = #ff1100, style = label.style_label_down, textcolor = color.white, size = size.tiny)
    label.delete(lbl[1])
else if bool(ph) and valH < valpH
    lbl := label.new(n[length], math.max(ma, sg), HIL, color = #e79700, style = label.style_label_down, textcolor = color.white, size = size.tiny)
    label.delete(lbl[1])
else if bool(pl) and valL < valpL
    lbl := label.new(n[length], math.min(ma, sg), LOL, color = #009c0c, style = label.style_label_up, textcolor = color.white, size = size.tiny)
    label.delete(lbl[1])
else if bool(pl) and valL > valpL
    lbl := label.new(n[length], math.min(ma, sg), LOH, color = #0073ee, style = label.style_label_up, textcolor = color.white, size = size.tiny)
    label.delete(lbl[1])
label.delete(lbl[200])

var table t = table.new(position.bottom_right, 1, 1)
if barstate.islast
    table.cell(t, 0, 0, "DM", text_color=#ffffff, bgcolor=#2196f326, text_size=size.large)

// ================================================================================================= //
